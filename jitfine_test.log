/home/WangZiyang/.local/lib/python3.8/site-packages/torch/cuda/__init__.py:128: UserWarning: CUDA initialization: The NVIDIA driver on your system is too old (found version 10020). Please update your GPU driver by downloading and installing a new version from the URL: http://www.nvidia.com/Download/index.aspx Alternatively, go to: https://pytorch.org to install a PyTorch version that has been compiled with your version of the CUDA driver. (Triggered internally at ../c10/cuda/CUDAFunctions.cpp:108.)
  return torch._C._cuda_getDeviceCount() > 0
09/12/2024 14:08:38 - WARNING - __main__ -   device: cpu, n_gpu: 1
09/12/2024 14:08:40 - INFO - __main__ -   Training/evaluation parameters Namespace(adam_epsilon=1e-08, buggy_line_filepath='data/jitfine/changes_complete_buggy_line_level.pkl', cache_dir='', config_name='microsoft/codebert-base', device=device(type='cpu'), do_eval=False, do_seed=123456, do_test=True, do_train=False, epochs=50, eval_batch_size=25, eval_data_file=['data/jitfine/changes_valid.pkl', 'data/jitfine/features_valid.pkl'], evaluate_during_training=True, feature_size=14, gradient_accumulation_steps=1, head_dropout_prob=0.1, learning_rate=2e-05, manual_checkpoint=None, max_grad_norm=1.0, max_msg_length=64, max_seq_length=512, max_steps=-1, model_name_or_path='microsoft/codebert-base', n_gpu=1, no_abstraction=False, num_labels=2, only_adds=True, output_dir='model/jitfine/saved_models_concat/checkpoints', patience=5, seed=42, semantic_checkpoint=None, test_data_file=['data/jitfine/changes_test.pkl', 'data/jitfine/features_test.pkl'], tokenizer_name='microsoft/codebert-base', train_batch_size=256, train_data_file=['data/jitfine/changes_train.pkl', 'data/jitfine/features_train.pkl'], warmup_steps=0, weight_decay=0.0)
/home/WangZiyang/JIT-Fine/JITFine/concat/run.py:537: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  checkpoint = torch.load(output_dir)
09/12/2024 14:08:42 - INFO - __main__ -   Successfully load epoch 3's model checkpoint
09/12/2024 14:08:42 - INFO - __main__ -   Cache Dataset file at data/jitfine/test_set_cache_msg64.pkl 
09/12/2024 14:08:42 - INFO - __main__ -   ***** Running Test *****
09/12/2024 14:08:42 - INFO - __main__ -     Num examples = 5480
09/12/2024 14:08:42 - INFO - __main__ -     Batch size = 25
09/12/2024 14:30:56 - INFO - __main__ -   ***** Eval results *****
09/12/2024 14:30:56 - INFO - __main__ -     eval_f1 = 0.4081
09/12/2024 14:30:56 - INFO - __main__ -     eval_precision = 0.4674
09/12/2024 14:30:56 - INFO - __main__ -     eval_recall = 0.3621
09/12/2024 14:30:56 - INFO - __main__ -     eval_threshold = 0.5
09/12/2024 14:31:01 - INFO - __main__ -   Top-10-ACC: 0.1732,Top-5-ACC: 0.1748, Recall20%Effort: 0.2384, Effort@20%LOC: 0.3283, IFA: 14.5291
09/12/2024 14:31:02 - INFO - root -   F1: 0.4081, AUC: 0.8766, PCI@20%LOC: 0.7200, Effort@20%Recall: 0.0163, POpt: 0.9129
