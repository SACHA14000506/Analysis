{"1e11b62bc6587579481bb5cfb29170b83f67fa21":{"changes":{"src\/muz\/base\/dl_rule_set.cpp":"MODIFY","src\/muz\/base\/fp_params.pyg":"MODIFY","src\/muz\/spacer\/spacer_util.h":"MODIFY","src\/muz\/base\/dl_rule_set.h":"MODIFY","src\/muz\/transforms\/CMakeLists.txt":"MODIFY","src\/muz\/transforms\/dl_mk_synchronize.h":"ADD","src\/muz\/spacer\/spacer_context.cpp":"MODIFY","src\/muz\/spacer\/spacer_prop_solver.cpp":"MODIFY","src\/muz\/transforms\/dl_mk_synchronize.cpp":"ADD","src\/muz\/spacer\/spacer_context.h":"MODIFY"},"diff":{"src\/muz\/base\/dl_rule_set.cpp":[{"add":["33","            for (auto & kv : o) {","116","                    \/\/ insert d and ensure the invariant","117","                    \/\/ that every predicate is present as","150","        for (func_decl* f : to_remove)","255","    rule_set::rule_set(context & ctx)","256","          : m_context(ctx),","257","            m_rule_manager(ctx.get_rule_manager()),","258","            m_rules(m_rule_manager),","264","    rule_set::rule_set(const rule_set & other)","265","        : m_context(other.m_context),","266","          m_rule_manager(other.m_rule_manager),","355","","358","    }","359","","360","    void rule_set::replace_rule(rule * r, rule * other) {","361","        TRACE(\"dl\", r->display(m_context, tout << \"replace:\"););","362","        func_decl* d = r->get_decl();","363","        rule_vector* rules = m_head2rules.find(d);","364","#define REPLACE_VECTOR(_v)                              \\","365","        for (unsigned i = (_v).size(); i > 0; ) {       \\","366","            --i;                                        \\","367","            if ((_v)[i] == r) {                         \\","368","                (_v)[i] = other;                        \\","369","                break;                                  \\","370","            }                                           \\","371","        }                                               \\","372","","373","        REPLACE_VECTOR(*rules);","374","        REPLACE_VECTOR(m_rules);","375","    }","384","        SASSERT(!is_closed()); \/\/the rule_set is not already closed","445","    const rule_vector & rule_set::get_predicate_rules(func_decl * pred) const {","538","","564","            \/\/the number of the predicate is not stored, therefore it did not appear","565","            \/\/in the algorithm and therefore it does not depend on anything and nothing","660","        \/\/ We put components whose indegree is zero to m_strats and assign its","699","        SASSERT(std::find_if(m_components.begin(), m_components.end(),","732",""],"delete":["33","            for (auto & kv : o) { ","116","                    \/\/ insert d and ensure the invariant ","117","                    \/\/ that every predicate is present as ","150","        for (func_decl* f : to_remove) ","255","    rule_set::rule_set(context & ctx) ","256","          : m_context(ctx), ","257","            m_rule_manager(ctx.get_rule_manager()), ","258","            m_rules(m_rule_manager), ","264","    rule_set::rule_set(const rule_set & other) ","265","        : m_context(other.m_context), ","266","          m_rule_manager(other.m_rule_manager), ","355","        ","358","    }    ","367","        SASSERT(!is_closed()); \/\/the rule_set is not already closed        ","428","    const rule_vector & rule_set::get_predicate_rules(func_decl * pred) const { ","521","            ","547","            \/\/the number of the predicate is not stored, therefore it did not appear ","548","            \/\/in the algorithm and therefore it does not depend on anything and nothing ","643","        \/\/ We put components whose indegree is zero to m_strats and assign its ","682","        SASSERT(std::find_if(m_components.begin(), m_components.end(), ","715","        "]}],"src\/muz\/base\/fp_params.pyg":[{"add":["179","                          ('spacer.use_bg_invs', BOOL, False, 'Enable external background invariants'),"],"delete":[]}],"src\/muz\/spacer\/spacer_util.h":[{"add":["50","        \/\/ XXX: level is 16 bits in class pob","51","        return lvl >= 65535;"],"delete":["50","        return lvl == infty_level ();"]}],"src\/muz\/base\/dl_rule_set.h":[{"add":["79","","133","            : m_deps(deps), m_next_preorder(0)","147","","205","        \/**","206","           \\brief Replace a rule \\c r with the rule \\c other","207","        *\/","208","        void replace_rule(rule * r, rule * other);","282",""],"delete":["79","        ","133","            : m_deps(deps), m_next_preorder(0) ","147","        ","278","    ","282",""]}],"src\/muz\/transforms\/CMakeLists.txt":[{"add":["27","    dl_mk_synchronize.cpp"],"delete":[]}],"src\/muz\/transforms\/dl_mk_synchronize.h":[{"add":[],"delete":[]}],"src\/muz\/spacer\/spacer_context.cpp":[{"add":["495","    m_external(false), m_blocked(false),","496","    m_background(false) {","508","    m_external(false), m_blocked(false),","509","    m_background(false) {","523","    m_external(false), m_blocked(false),","524","    m_background(false) {","925","expr_ref pred_transformer::get_formulas(unsigned level, bool bg) const","928","    m_frames.get_frame_geq_lemmas (level, res, bg);","939","    SASSERT(!lemma->is_background());","980","bool pred_transformer::add_lemma (expr *e, unsigned lvl, bool bg) {","982","    lem->set_background(bg);","1223","void pred_transformer::add_cover(unsigned level, expr* property, bool bg)","1225","    SASSERT(!bg || is_infty_level(level));","1229","    proof_ref pr(m);","1230","    pr = m.mk_asserted(m.mk_true());","1234","        sub.insert(v, c, pr);","1245","        add_lemma(lemmas.get(i), level, bg);","1252","\/\/ compute a conjunction of all background facts","1253","void pred_transformer::get_pred_bg_invs(expr_ref_vector& out) {","1254","    expr_ref inv(m), tmp1(m), tmp2(m);","1255","    ptr_vector<func_decl> preds;","1256","    for (auto kv : m_pt_rules) {","1257","        expr* tag = kv.m_value->tag();","1258","        datalog::rule const &r = kv.m_value->rule();","1259","        find_predecessors (r, preds);","1260","","1261","        for (unsigned i = 0, preds_sz = preds.size(); i < preds_sz; i++) {","1262","            func_decl* pre = preds[i];","1263","            pred_transformer &pt = ctx.get_pred_transformer(pre);","1264","            const lemma_ref_vector &invs = pt.get_bg_invs();","1265","            CTRACE(\"spacer\", !invs.empty(),","1266","                   tout << \"add-bg-invariant: \" << mk_pp (pre, m) << \"\\n\";);","1267","            for (auto inv : invs) {","1268","                \/\/ tag -> inv1 ...  tag -> invn","1269","                tmp1 = m.mk_implies(tag, inv->get_expr());","1270","                pm.formula_n2o(tmp1, tmp2, i);","1271","                out.push_back(tmp2);","1272","                TRACE(\"spacer\", tout << tmp2 << \"\\n\";);","1273","            }","1274","        }","1275","    }","1276","}","1378","    flatten_and(post);","1379","","1380","    \/\/ if equality propagation is disabled in arithmetic, expand","1381","    \/\/ equality literals into two inequalities to increase the space","1382","    \/\/ for interpolation","1383","    if (!ctx.use_eq_prop()) {","1384","        expand_literals(m, post);","1385","    }","1514","    expr_ref_vector cand(m), aux(m), conj(m);","1524","    cand.push_back(mk_not(m, lemma_expr));","1525","    flatten_and (cand);","1536","","1537","    conj.push_back(m_extend_lit);","1538","    if (ctx.use_bg_invs()) get_pred_bg_invs(conj);","1539","","1540","    lbool r = m_solver->check_assumptions (cand, aux, m_transition_clause,","1541","                                           conj.size(), conj.c_ptr(), 1);","1572","    if (ctx.use_bg_invs()) get_pred_bg_invs(conj);","1993","    if (new_lemma->is_background()) {","1994","        SASSERT (is_infty_level(new_lemma->level()));","1995","","1996","        for (auto &l : m_bg_invs) {","1997","            if (l->get_expr() == new_lemma->get_expr()) return false;","1998","        }","1999","        TRACE(\"spacer\", tout << \"add-external-lemma: \"","2000","              << pp_level(new_lemma->level()) << \" \"","2001","              << m_pt.head()->get_name() << \" \"","2002","              << mk_pp(new_lemma->get_expr(), m_pt.get_ast_manager()) << \"\\n\";);","2003","","2004","        m_bg_invs.push_back(new_lemma);","2005","        return true;","2006","    }","2007","","2354","    m_use_bg_invs = m_params.spacer_use_bg_invs();","2483","        IF_VERBOSE(10, verbose_stream() << \"did not find predicate \"","2484","                   << p->get_name() << \"\\n\";);","2489","void context::add_cover(int level, func_decl* p, expr* property, bool bg)","2491","    scoped_proof _pf_(m);","2492","","2497","        IF_VERBOSE(10, verbose_stream() << \"did not find predicate \"","2498","                   << p->get_name() << \"\\n\";);","2501","    pt->add_cover(lvl, property, bg);","2505","{add_cover (infty_level(), p, property, true);}","2507","expr_ref context::get_reachable(func_decl *p) {","2514","bool context::validate() {","2545","        get_level_property(m_inductive_lvl, refs, rs, use_bg_invs());","2686","                                 vector<relation_info>& rs, bool with_bg) const {","2692","        expr_ref conj = r->get_formulas(lvl, with_bg);","2724","                    get_level_property(m_inductive_lvl, refs, rs, use_bg_invs());","2906","    get_level_property(m_inductive_lvl, refs, rs, use_bg_invs());","2939","    get_level_property(m_inductive_lvl, refs, rs, use_bg_invs());"],"delete":["495","    m_external(false), m_blocked(false) {","507","    m_external(false), m_blocked(false) {","521","    m_external(false), m_blocked(false)","522","{","923","expr_ref pred_transformer::get_formulas(unsigned level) const","926","    m_frames.get_frame_geq_lemmas (level, res);","977","bool pred_transformer::add_lemma (expr *e, unsigned lvl) {","1219","void pred_transformer::add_cover(unsigned level, expr* property)","1227","        sub.insert(v, c);","1238","        add_lemma(lemmas.get(i), level);","1474","    expr_ref_vector conj(m), aux(m);","1484","    conj.push_back(mk_not(m, lemma_expr));","1485","    flatten_and (conj);","1496","    expr * bg = m_extend_lit.get ();","1497","    lbool r = m_solver->check_assumptions (conj, aux, m_transition_clause,","1498","                                          1, &bg, 1);","1943","","1944","","2425","        IF_VERBOSE(10, verbose_stream() << \"did not find predicate \" << p->get_name() << \"\\n\";);","2430","void context::add_cover(int level, func_decl* p, expr* property)","2436","        IF_VERBOSE(10, verbose_stream() << \"did not find predicate \" << p->get_name() << \"\\n\";);","2439","    pt->add_cover(lvl, property);","2443","{add_cover (infty_level(), p, property);}","2445","expr_ref context::get_reachable(func_decl *p)","2446","{","2453","bool context::validate()","2454","{","2485","        get_level_property(m_inductive_lvl, refs, rs);","2626","                                 vector<relation_info>& rs) const {","2632","        expr_ref conj = r->get_formulas(lvl);","2664","                    get_level_property(m_inductive_lvl, refs, rs);","2846","    get_level_property(m_inductive_lvl, refs, rs);","2879","    get_level_property(m_inductive_lvl, refs, rs);"]}],"src\/muz\/spacer\/spacer_prop_solver.cpp":[{"add":["96","    if (is_infty_level(lvl)) return;"],"delete":[]}],"src\/muz\/transforms\/dl_mk_synchronize.cpp":[{"add":[],"delete":[]}],"src\/muz\/spacer\/spacer_context.h":[{"add":["130","    unsigned m_external:1;    \/\/ external lemma from another solver","131","    unsigned m_blocked:1;     \/\/ blocked by CTP","132","    unsigned m_background:1;  \/\/ background assumed fact","166","    void set_background(bool v) {m_background = v;}","167","    bool is_background() {return m_background;}","168","","228","        lemma_ref_vector m_bg_invs;        \/\/ background (assumed) invariants","237","        frames (pred_transformer &pt) : m_pt (pt),","238","                                        m_size(0), m_sorted (true) {}","253","        void get_frame_geq_lemmas (unsigned level, expr_ref_vector &out,","254","                                   bool with_bg = false) const {","260","            if (with_bg) {","261","                for (auto &lemma : m_bg_invs)","262","                    out.push_back(lemma->get_expr());","263","            }","266","        const lemma_ref_vector& get_bg_invs() const {return m_bg_invs;}","267","        unsigned size() const {return m_size;}","268","        unsigned lemma_size() const {return m_lemmas.size ();}","269","        unsigned bg_invs_size() const {return m_bg_invs.size();}","270","","271","        void add_frame() {m_size++;}","281","            m_bg_invs.append(other.m_bg_invs);","435","    \/\/ get tagged formulae of all of the background invariants for all of the","436","    \/\/ predecessors of the current transformer","437","    void get_pred_bg_invs(expr_ref_vector &out);","438","    const lemma_ref_vector &get_bg_invs() const {return m_frames.get_bg_invs();}","439","","470","    void     add_cover(unsigned level, expr* property, bool bg = false);","506","    bool add_lemma(expr * e, unsigned lvl, bool bg);","549","    expr_ref get_formulas(unsigned level, bool bg = false) const;","980","    bool                 m_use_bg_invs;","1015","                            vector<relation_info> & rs,","1016","                            bool with_bg = false) const;","1051","    bool use_eq_prop() const {return m_use_eq_prop;}","1052","    bool use_native_mbp() const {return m_use_native_mbp;}","1053","    bool use_ground_pob() const {return m_ground_pob;}","1054","    bool use_instantiate() const {return m_instantiate;}","1055","    bool weak_abs() const {return m_weak_abs;}","1056","    bool use_qlemmas() const {return m_use_qlemmas;}","1057","    bool use_euf_gen() const {return m_use_euf_gen;}","1058","    bool simplify_pob() const {return m_simplify_pob;}","1059","    bool use_ctp() const {return m_use_ctp;}","1060","    bool use_inc_clause() const {return m_use_inc_clause;}","1061","    unsigned blast_term_ite_inflation() const {return m_blast_term_ite_inflation;}","1062","    bool elim_aux() const {return m_elim_aux;}","1063","    bool reach_dnf() const {return m_reach_dnf;}","1064","    bool use_bg_invs() const {return m_use_bg_invs;}","1107","    void add_cover(int level, func_decl* pred, expr* property, bool bg = false);"],"delete":["130","    unsigned m_external:1;","131","    unsigned m_blocked:1;","232","        frames (pred_transformer &pt) : m_pt (pt), m_size(0), m_sorted (true) {}","247","        void get_frame_geq_lemmas (unsigned level, expr_ref_vector &out) const {","255","        unsigned size () const {return m_size;}","256","        unsigned lemma_size () const {return m_lemmas.size ();}","257","        void add_frame () {m_size++;}","450","    void     add_cover(unsigned level, expr* property);","486","    bool add_lemma(expr * lemma, unsigned lvl);","529","    expr_ref get_formulas(unsigned level) const;","994","                            vector<relation_info> & rs) const;","1029","    bool use_native_mbp () {return m_use_native_mbp;}","1030","    bool use_ground_pob () {return m_ground_pob;}","1031","    bool use_instantiate () {return m_instantiate;}","1032","    bool weak_abs() {return m_weak_abs;}","1033","    bool use_qlemmas () {return m_use_qlemmas;}","1034","    bool use_euf_gen() {return m_use_euf_gen;}","1035","    bool simplify_pob() {return m_simplify_pob;}","1036","    bool use_ctp() {return m_use_ctp;}","1037","    bool use_inc_clause() {return m_use_inc_clause;}","1038","    unsigned blast_term_ite_inflation() {return m_blast_term_ite_inflation;}","1039","    bool elim_aux() {return m_elim_aux;}","1040","    bool reach_dnf() {return m_reach_dnf;}","1083","    void add_cover(int level, func_decl* pred, expr* property);"]}]}}}