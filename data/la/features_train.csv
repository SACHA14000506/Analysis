project,parent_hashes,commit_hash,author_name,author_email,author_date,author_date_unix_timestamp,commit_message,la,ld,fileschanged,nf,ns,nd,entropy,ndev,lt,nuc,age,exp,rexp,sexp,classification,fix,is_buggy_commit
cvc5,80b14c0965678fb91467de287b00a9a1d8a39be5,207245fef36ccad1281fefe9d3f3403cd4f6d15b,Andrew Reynolds,andrew.j.reynolds@gmail.com,2019/10/16 18:44,1571222657,"Solver state for theory of strings (#3181)

This refactors the theory of strings to use a solver state object, which manages state information regarding assertions.

It also deletes some unused/undefined functions in theory_strings.h.

There are no major changes to the behavior of the code or its documentation in this PR.

This is work towards #1881.",879,657,"src/CMakeLists.txt, src/theory/strings/inference_manager.cpp, src/theory/strings/inference_manager.h, src/theory/strings/regexp_solver.cpp, src/theory/strings/regexp_solver.h, src/theory/strings/solver_state.cpp, src/theory/strings/solver_state.h, src/theory/strings/theory_strings.cpp, src/theory/strings/theory_strings.h, src/theory/strings/theory_strings_utils.cpp, src/theory/strings/theory_strings_utils.h",11,2,2,2.177975493,4,6003.0,11,548.1818182,151.0,0.0,13.0,0,False,1.0
z3,8db04298095f2bbd301c4411ae334ec22b1e1eb5,b2c3025e2185057694bcc4f23e965fd367070f3f,Nikolaj Bjorner,nbjorner@microsoft.com,2019/11/21 16:37,1574325465,"fix #2714

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",2,3,"src/smt/smt_conflict_resolution.cpp, src/smt/theory_str.cpp",2,1,1,0.970950594,3,9799.0,2,2061.0,42.0,0.0,4.0,0,True,1.0
z3,58f3dce2be92174aedeae32d483fd03a6fb0c55c,5f78ca9b588d3d0a7405e39630d548477f750710,Murphy Berzish,murphy.berzish@gmail.com,2019/11/25 14:28,1574663324,z3str3: negative lengths in get_len_value don't count,1,1,src/smt/theory_str.cpp,1,1,1,0.0,5,8649.0,1,1540.0,18.0,0.0,19.0,0,False,1.0
cvc5,eff8e6a30d348e2418f805602d3dd41ac2bc795b,89e00fbfffdbf3f7acde46623bf7a54f455614b5,Andrew Reynolds,andrew.j.reynolds@gmail.com,2019/11/25 17:59,1574675991,Better front-end type checking for SyGuS (#3496),105,8,"src/parser/smt2/smt2.cpp, src/theory/quantifiers/sygus/type_info.cpp, test/regress/CMakeLists.txt, test/regress/regress0/sygus/pLTL-sygus-syntax-err.sy",4,3,4,0.871792237,1,2052.0,4,1088.75,6.0,0.0,2.0,0,False,1.0
cvc5,89e00fbfffdbf3f7acde46623bf7a54f455614b5,bd2793a68e021ab58ab07db0cac67cf3d6806ead,Andrew Reynolds,andrew.j.reynolds@gmail.com,2019/11/27 11:03,1574823829,Fix indexof range lemma (#3499),13,1,"src/theory/strings/theory_strings.cpp, test/regress/CMakeLists.txt, test/regress/regress0/strings/issue3497.smt2",3,2,3,1.198117421,4,3975.0,3,1024.0,162.0,0.0,21.0,0,True,1.0
z3,b8f2cf5b0bf8b40d16647892db7ee273ba0ccbf5,bf28b815faad1e4bfdcb02c24ebc66cd0ab2589a,Murphy Berzish,murphy.berzish@gmail.com,2019/11/29 11:20,1574997647,z3str3: add a method to rewrite-and-assert an axiom to reduce boilerplate,24,14,"src/smt/theory_str.cpp, src/smt/theory_str.h",2,1,1,0.297472249,8,9197.0,2,1544.0,32.0,0.0,38.0,0,False,1.0
z3,7b0327dbad70ec613aceaccdc78b1f528f0b2e7c,89c9bb2e0e5867ec858a30374ef4411f4ccfd1ac,Murphy Berzish,murphy.berzish@gmail.com,2019/11/29 17:19,1575019166,z3str3: don't call propagate() in init_search_eh(),0,4,src/smt/theory_str.cpp,1,1,1,0.0,2,8663.0,1,1544.0,0.0,0.0,0.0,0,False,1.0
z3,0d004b5232d8f7ff6e8904e26adee09c6e19a27c,489448b8698bae7e6937b152df309c107392b5fc,Nikolaj Bjorner,nbjorner@microsoft.com,2019/11/30 18:05,1575108324,"fix #2762, fix #2750, add iterative unrolling to help on termination on sat instances (to address non-termination in #2759 and #2762)

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",55,46,"src/ast/seq_decl_plugin.cpp, src/ast/seq_decl_plugin.h, src/smt/theory_seq.cpp",3,2,2,0.684501389,2,6857.0,3,2215.0,21.0,0.0,5.0,0,True,1.0
z3,489448b8698bae7e6937b152df309c107392b5fc,320d6640b18ccbfd03bc860a42324f09d9ba29f6,Nikolaj Bjorner,nbjorner@microsoft.com,2019/11/30 18:32,1575109939,"ensure unfolding is increased with seq

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",1,1,src/smt/theory_seq.cpp,1,1,1,0.0,7,5481.0,1,1453.0,168.0,0.0,37.0,0,False,1.0
z3,34ae55f4f50e4b616470518841f8183b88f48c90,78feac44655fd322c087d41da85b3f60b2d47fb4,Nikolaj Bjorner,nbjorner@microsoft.com,2019/12/23 19:36,1577100973,"different kind of loop

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",15,11,src/smt/theory_seq.cpp,1,1,1,0.0,8,5499.0,1,1476.0,200.0,0.0,45.0,0,False,1.0
z3,9af4cc0fd68b6e8929ea605b944ee5415dd4191a,b35ec49b402ed8ec2bd5a0bfacb3472483c77ba0,Nikolaj Bjorner,nbjorner@microsoft.com,2019/12/3 12:53,1575348786,fix #2778,7,4,src/smt/theory_diff_logic_def.h,1,1,1,0.0,3,1185.0,1,2598.0,44.0,0.0,6.0,0,True,1.0
z3,3d874313d3297215979b002ea75863d12cc1f4de,f646c9ac11d24c6e2236be7e2658c100edcfb69d,Nikolaj Bjorner,nbjorner@microsoft.com,2019/12/4 10:45,1575427517,fix #2780,2,1,src/smt/theory_lra.cpp,1,1,1,0.0,8,3232.0,1,938.0,77.0,0.0,34.0,0,True,1.0
z3,7e415c1b6972c32b5385de6a38b08d46c7ea9bb0,32e5c6ffd1d2743fd0bcddc75006cddb9316cbaf,Murphy Berzish,murphy.berzish@gmail.com,2019/12/4 16:41,1575448911,z3str3: missed instance of rewrite-then-assert,1,1,src/smt/theory_str.cpp,1,1,1,0.0,3,8663.0,1,1549.0,1.0,0.0,5.0,0,False,1.0
cvc5,6538957335ecf83af38150054cf80555a57e72d0,d36423fb74e3ec294b222b806cb24b5229e72ed1,Andrew Reynolds,andrew.j.reynolds@gmail.com,2019/4/30 14:11,1556604676,Remove stoi solve rewrite (#2985),25,25,"src/theory/strings/theory_strings_rewriter.cpp, test/regress/CMakeLists.txt, test/regress/regress1/strings/issue2981.smt2, test/regress/regress1/strings/stoi-solve.smt2",4,2,3,1.252347951,3,4343.0,4,662.25,11.0,0.0,8.0,0,False,1.0
cvc5,f61ad6919fc80cbc19fde9c295beb5082a6e0d79,2d478849d704f44f2a1f584dbc98d3731ca4e6ee,Andres Noetzli,andres.noetzli@gmail.com,2019/6/13 18:39,1560422350,"Add lemma for the range of values of str.indexof (#3054)

This commit adds a lemma that the value of `str.indexof(x, y, n)` must
be between -1 and `str.len(x)`.",9,0,src/theory/strings/theory_strings.cpp,1,1,1,0.0,2,4283.0,1,2100.0,0.0,0.0,2.0,0,False,1.0
cvc5,b967cc5c8d84023c1b821c59b7bca736ffda6bed,b58bdc9c5672430cf15914c64129136b24050152,Andrew Reynolds,andrew.j.reynolds@gmail.com,2019/8/22 9:55,1566438931,Local substitutions for context-depdendent simplification in strings (#3204),124,54,"src/theory/strings/theory_strings.cpp, src/theory/strings/theory_strings.h, test/regress/CMakeLists.txt, test/regress/regress2/strings/issue3203.smt2",4,2,3,0.925418439,1,4614.0,4,1262.0,0.0,0.0,0.0,0,False,1.0
z3,09dbacdf5072073394e2610319b4b14a40f02da9,1d0572354b448a29bad4431948850f92ca07e6da,Nikolaj Bjorner,nbjorner@microsoft.com,2020/1/1 20:14,1577880852,"add bit-matrix, avoid flattening and/or after bit-blasting, split pdd_grobner into solver/simplifier, add xlin, add smtfd option for incremental mode logic

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",991,386,"scripts/mk_project.py, src/cmd_context/check_logic.cpp, src/math/dd/dd_pdd.cpp, src/math/dd/dd_pdd.h, src/math/grobner/CMakeLists.txt, src/math/grobner/pdd_simplifier.cpp, src/math/grobner/pdd_simplifier.h, src/math/grobner/pdd_solver.cpp, src/math/grobner/pdd_solver.h, src/math/simplex/CMakeLists.txt, src/math/simplex/bit_matrix.cpp, src/math/simplex/bit_matrix.h, src/sat/sat_solver/inc_sat_solver.cpp, src/solver/smt_logics.cpp, src/tactic/portfolio/smt_strategic_solver.cpp, src/test/pdd.cpp, src/test/pdd_solver.cpp",17,7,9,2.540414703,3,4425.0,17,740.1176471,25.0,0.0,2.0,0,False,1.0
z3,74f0665a0bf605367627737ef9e58aaf066944e1,e8cfbb41d36a91e13eac13bf8a978134fa2ff3de,Nikolaj Bjorner,nbjorner@microsoft.com,2020/1/12 17:22,1578820979,"missing length constraint for at fixes #2852

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",2,1,src/smt/theory_seq.cpp,1,1,1,0.0,5,5500.0,1,1496.0,152.0,0.0,30.0,0,True,1.0
z3,ff6b3304f8daf571cf3a122881749d0289bf757d,faf39347490b19d7746335442d5ff1d7ee896c46,Murphy Berzish,murphy.berzish@gmail.com,2020/1/16 15:27,1579159652,z3str3: add bitvector model construction algorithm,1427,35,"src/smt/params/smt_params.cpp, src/smt/params/smt_params_helper.pyg, src/smt/params/theory_str_params.cpp, src/smt/params/theory_str_params.h, src/smt/theory_str.cpp, src/smt/theory_str.h",6,1,2,0.745144797,4,9354.0,6,1773.333333,8.0,0.0,15.0,0,False,1.0
z3,55f62fcaed255e47f7557e4f5dd6ecd04abd8e88,876d7c92fba44d7068d28de35ed5e58e98d4db16,Olaf Tomalka,olaf.tomalka@gmail.com,2020/1/22 21:54,1579701250,"Added FreshFunction to Python bindings.

All other declarations can be done use appropriate Fresh*() call,
or FreshConst() with a desired sort, except Functions.

I've added the abillity to do that in Python bindings using already existing APIs",23,0,src/api/python/z3/z3.py,1,1,1,0.0,5,4176.0,1,1225.0,0.0,0.0,0.0,0,False,1.0
z3,f2015b3f49552dd6ececa1bf364189b67d67b32b,ce0ccc2e9ef9b5c71312a08795575cbd11c75c11,Nikolaj Bjorner,nbjorner@microsoft.com,2020/1/24 16:17,1579853867,"fix #2860

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",218,32,"src/ast/seq_decl_plugin.h, src/smt/params/smt_params_helper.pyg, src/smt/params/theory_seq_params.cpp, src/smt/params/theory_seq_params.h, src/smt/theory_seq.cpp, src/smt/theory_seq.h",6,2,3,0.48936293,8,6653.0,6,1570.833333,194.0,0.0,66.0,0,True,1.0
cvc5,33cabd5c723d33a5aa4c85856af83b141cbbbd87,e3361a428a1b24369d782120de1f050874a8ac44,Andres Noetzli,andres.noetzli@gmail.com,2020/1/29 18:29,1580293755,Better heuristics for marking congruent variables (#3677),17,4,src/theory/strings/theory_strings.cpp,1,1,1,0.0,4,4007.0,1,2330.0,3.0,0.0,9.0,0,False,1.0
z3,d27a949ae9fa79bd322e79161e4959ce1e3a252a,a6c3c18e744338f8c426147f7b2e8c0a9643e3b1,Nikolaj Bjorner,nbjorner@microsoft.com,2020/1/4 13:29,1578115790,"add files

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",1177,0,"src/sat/sat_cutset.cpp, src/sat/sat_cutset.h, src/sat/sat_cutset_compute_shift.h",3,1,1,0.982624285,8,396.0,3,-1.0,145.0,0.0,2.0,0,False,1.0
cvc5,88f1c68a94bd998854cb0bf3a1ce3f516cb774f8,2ac7e8c916bfb33eb73cd90b20a92bef7036ac6b,Andres Noetzli,andres.noetzli@gmail.com,2020/1/9 16:45,1578559538,"Optimize str.substr reduction (#3595)

This commit optimizes the `str.substr` reduction by replacing the
if-then-else term for the length of the suffix `len(sk2) = ite(len(s) >=
n+m, len(s) - (n + m), 0)` with `(len(sk2) = len(s) - (n + m) v
len(sk2) = 0) ^ len(skt) <= m`. Experiments have shown that the latter
encoding is more efficient.",21,9,src/theory/strings/theory_strings_preprocess.cpp,1,1,1,0.0,3,467.0,1,2294.0,1.0,0.0,4.0,0,True,1.0
z3,cf86e6ef73bf64669ccf48cc739e8447d4982c0f,762f265616a9e8b88b7119cbec345da1368c00a6,Lev Nachmanson,levnach@hotmail.com,2020/2/14 10:55,1581648921,"merge with master

Signed-off-by: Lev Nachmanson <levnach@hotmail.com>",23,8,"src/math/lp/lar_solver.cpp, src/math/lp/lar_solver.h, src/smt/params/smt_params_helper.pyg",3,2,2,0.993099939,7,2405.0,3,1046.333333,26.0,0.0,45.0,0,False,1.0
cvc5,e3231523b7bd8da0871b1efb63f23f1b3c4adbe7,f5c8fa4f2edf773d1942110b7fee6411894c6961,Andrew Reynolds,andrew.j.reynolds@gmail.com,2020/2/16 15:47,1581839251,Add temporary global API conversion utilities. (#3759),98,34,"src/api/cvc4cpp.cpp, src/api/cvc4cpp.h",2,1,1,0.632130278,1,3644.0,2,597.5,4.0,0.0,0.0,0,False,1.0
z3,f810f25d8d612b00e2282e80bac7f909d0de3809,da8182419b6e3a1638bf5e31a5e76cc409988ee3,Murphy Berzish,murphy.berzish@gmail.com,2020/2/17 15:19,1581923990,z3str3: fix indexof out-of-bounds axiom terms,7,7,src/smt/theory_str.cpp,1,1,1,0.0,4,7798.0,1,1624.0,2.0,0.0,11.0,0,True,1.0
z3,55df045f85645e38d54274f3591b09d60dd99146,f604fad77971613ae7baa684886f2219f42c2a8c,Murphy Berzish,murphy.berzish@gmail.com,2020/2/20 16:11,1582186305,"z3str3: fix negated str.contains, add reduction for str.at",22,1,src/smt/theory_str_mc.cpp,1,1,1,0.0,5,2102.0,1,37.0,19.0,0.0,22.0,0,True,1.0
z3,b9bfa950f69c2be539ec12d61be856c3c1bcaf95,ab92c201064614354565707724f0297f2ef8a8d1,Lev Nachmanson,levnach@hotmail.com,2020/2/22 21:30,1582378209,"add option branch_flip to lp_settings

Signed-off-by: Lev Nachmanson <levnach@hotmail.com>",11,10,"src/math/lp/int_branch.cpp, src/math/lp/lp_settings.h, src/smt/params/smt_params_helper.pyg, src/smt/theory_array.cpp, src/smt/theory_lra.cpp",5,2,3,1.845462973,4,4364.0,5,1322.0,2.0,0.0,21.0,0,False,1.0
z3,f18bd7bf08c53ff6ca34d862b71f5956726e8502,01299dacbfcde7162fe6dbc6543f22510c1a576b,Murphy Berzish,murphy.berzish@gmail.com,2020/2/27 18:56,1582801018,z3str3: check relevancy of subformulas for negated non-relevant formulas in bitvector model construction,12,2,src/smt/theory_str_mc.cpp,1,1,1,0.0,4,2112.0,1,44.0,7.0,0.0,14.0,0,False,1.0
cvc5,6118996ec32a66fb8a62f42c79b093fdf82b9ef6,b2fad75b845de71d030705b3c3672009f1e4c2a4,Aina Niemetz,aina.niemetz@gmail.com,2020/2/3 16:42,1580719351,"Increase regression test time limit to 1200s. (#3704)

Fixes #3565.",1,1,test/regress/run_regression.py,1,1,1,0.0,3,327.0,1,668.0,0.0,0.0,2.0,0,True,1.0
cvc5,d0f7a3922e38483908d4b86829241a48d8d8db57,4c471e6e99dcd60d07d8978222956dd0ddd151db,Mathias Preiner,mathias.preiner@gmail.com,2020/2/4 7:49,1580773771,"Fix header installation on MacOS. (#3660)

On MacOS sed -i requires a suffix to be set.",5,3,src/fix-install-headers.sh,1,1,1,0.0,4,0.0,1,327.0,0.0,0.0,0.0,0,True,1.0
z3,d4d3971ecdcb3e83d245b67353f9c111ad38a564,3ab74776638004e1c63c36f4fc9ef6da4461a2a2,Nikolaj Bjorner,nbjorner@microsoft.com,2020/2/4 8:55,1580777755,"fix #2920

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",39,40,"src/smt/theory_seq.cpp, src/smt/theory_seq.h",2,1,1,0.097940583,4,6288.0,2,1519.0,60.0,0.0,14.0,0,True,1.0
z3,d9c09dcdf94411b70bc23f817b67bf526a17724b,67d19cba4a2e28a8721bb3efa7539409d3486fa9,Nikolaj Bjorner,nbjorner@microsoft.com,2020/3/11 14:13,1583907192,"fix #3105 fix #2937

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",1,1,src/smt/theory_seq.cpp,1,1,1,0.0,7,5662.0,1,1555.0,169.0,0.0,38.0,0,True,1.0
z3,0a97f37be504331354b1db322d75507e125612a5,1796fc32f5cd0c38c1399bac759e993b2e0cb852,Nikolaj Bjorner,nbjorner@microsoft.com,2020/3/12 10:16,1583979408,"breaking change to fix #3062 #3147 #2896 #2937 #3105

This moves handling of contains into an axiomatization that unfolds on demand.
The previous handling, based on rewriting, proved too brittle. While it simplifies how contains is handled, it is likely to introduce regressions in terms of what constraints can now be handled.",54,12,src/smt/theory_seq.cpp,1,1,1,0.0,2,5687.0,1,1556.0,24.0,0.0,4.0,0,True,1.0
z3,41965acaf1f1c3e4b6cc241b7219b217f8b2b8c1,e075f381527b90af937839c4cda4cc7e6f52bfc0,Nikolaj Bjorner,nbjorner@microsoft.com,2020/3/18 19:58,1584532693,"fixing #2956

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",8,12,src/smt/theory_seq.cpp,1,1,1,0.0,5,5688.0,1,1562.0,65.0,0.0,17.0,0,True,1.0
z3,2494709e98340887a0962a9992a97a8688e2d9e6,601b3998f38c5c92bd54185f8344251b5206a639,Nikolaj Bjorner,nbjorner@microsoft.com,2020/3/23 18:59,1584961147,"fix #3430

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",6,0,src/smt/theory_seq.cpp,1,1,1,0.0,5,5697.0,1,1567.0,154.0,0.0,32.0,0,True,1.0
z3,f92050c7e5bbe5dfb13aff02fdb30b9270f39c33,73d73e6c953dd0d63d76c1dca7f88bc04ccf4565,Nikolaj Bjorner,nbjorner@microsoft.com,2020/3/25 13:29,1585114176,"enhance rewriting for indexof based on #3516

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",17,0,src/ast/rewriter/seq_rewriter.cpp,1,1,1,0.0,5,2336.0,1,1571.0,153.0,0.0,11.0,0,False,1.0
z3,f92050c7e5bbe5dfb13aff02fdb30b9270f39c33,73d73e6c953dd0d63d76c1dca7f88bc04ccf4565,Nikolaj Bjorner,nbjorner@microsoft.com,2020/3/25 13:29,1585114176,"enhance rewriting for indexof based on #3516

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",17,0,src/ast/rewriter/seq_rewriter.cpp,1,1,1,0.0,4,2336.0,1,1571.0,55.0,0.0,5.0,0,False,1.0
z3,f5b62015fc10d1d065b53a4c9b2d0646df5fee98,b34f841421685050e1592b619a70c5b3757a46a1,Lev Nachmanson,levnach@hotmail.com,2020/3/25 17:44,1585129444,"setting the old defaul options for nla

Signed-off-by: Lev Nachmanson <levnach@hotmail.com>",2,2,src/smt/params/smt_params_helper.pyg,1,1,1,0.0,8,0.0,1,2669.0,27.0,0.0,37.0,0,False,1.0
z3,f5b62015fc10d1d065b53a4c9b2d0646df5fee98,b34f841421685050e1592b619a70c5b3757a46a1,Lev Nachmanson,levnach@hotmail.com,2020/3/25 17:44,1585129444,"setting the old defaul options for nla

Signed-off-by: Lev Nachmanson <levnach@hotmail.com>",2,2,src/smt/params/smt_params_helper.pyg,1,1,1,0.0,5,0.0,1,2669.0,23.0,0.0,31.0,0,False,1.0
z3,a7495876fdaf6265814f35559bf684ae24accb64,477fd3fba0184dbcea33a7b2b3790fa058c613d2,Nikolaj Bjorner,nbjorner@microsoft.com,2020/3/25 4:00,1585080021,"remove model initialization all-together because assumption literals are not connected with model

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",7,18,"src/opt/maxlex.cpp, src/smt/theory_seq.cpp",2,2,2,0.970950594,5,5859.0,2,996.0,63.0,0.0,16.0,0,False,1.0
z3,0fa04179d0adde1634f5ba1c6e91329072703d4d,73ab95d3383058a2b1a2120e615d3a410e176f7e,Nikolaj Bjorner,nbjorner@microsoft.com,2020/3/26 12:47,1585198050,"remove canonize in seq solver

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",2,0,src/smt/theory_seq.cpp,1,1,1,0.0,5,5728.0,1,1570.0,62.0,0.0,15.0,0,False,1.0
z3,fd219abe8c3ce297aaa11c8d766a37477ee73f98,c165f69248c2610981d610d9ae488ba801cd7841,Nikolaj Bjorner,nbjorner@microsoft.com,2020/3/26 9:17,1585185459,"fix #3525

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",56,16,"src/ast/ast.cpp, src/smt/theory_seq.cpp, src/tactic/core/dom_simplify_tactic.cpp",3,3,3,1.12817586,7,9196.0,3,1740.666667,174.0,0.0,59.0,0,True,1.0
cvc5,27ac2ce712b0bcfdef83e2d44dd210f667ab7959,a64866663f10db4ffadd2d48500cda05c4831f0e,Andrew Reynolds,andrew.j.reynolds@gmail.com,2020/3/27 10:23,1585275822,"Do not require that function sorts are first class internally (#4128)

This PR removes the requirement in the NodeManager that argument types to the function sort are first class.

Notice that the new API does this check (as it should): https://github.com/CVC4/CVC4/blob/master/src/api/cvc4cpp.cpp#L2633

Moreover, SyGuS v2 internally requires constructing function types having arguments that are not first class (e.g. regular expression type). This is required to update the regression https://github.com/CVC4/CVC4/blob/master/test/regress/regress1/sygus/re-concat.sy to SyGuS v2.

FYI @abdoo8080 .",41,51,"src/expr/node_manager.cpp, src/expr/node_manager.h",2,1,1,0.965636133,4,1396.0,2,3759.0,169.0,0.0,1.0,0,False,1.0
cvc5,04a8bf833bad57329a4e83b3c5aafb7537de885d,4e310461b2e41f9ccf1426797b5d8b58e27bc1c7,Andrew Reynolds,andrew.j.reynolds@gmail.com,2020/4/10 23:37,1586533063,"Ensure exported sygus solutions match grammar (#4270)

Previously we were doing rewriting/expand definitions during grammar normalization, which overwrote the original sygus operators. The connection to the original grammar was maintained via the SygusPrintCallback utility, which ensured that a sygus term printed in a way that matched the grammar.

We now have several use cases where solutions from SyGuS will be directly exported to the user, including the current use of get-abduct. This means that the terms must match the grammar, and we cannot simply rely on the print callback.

This moves the code to normalize sygus operators to datatypes utils, where the conversion between sygus and builtin terms takes place. This allows a version of this function where isExternal = true, which constructs terms matching the original grammar.

This PR enables the SyGuS API to have an accurate getSynthSolution method. It also will eliminate the need for SygusPrintCallback altogether, once the v1 parser is deleted.",199,146,"src/expr/dtype_cons.h, src/theory/datatypes/theory_datatypes_utils.cpp, src/theory/datatypes/theory_datatypes_utils.h, src/theory/quantifiers/sygus/sygus_grammar_norm.cpp, src/theory/quantifiers/sygus/sygus_grammar_norm.h, src/theory/quantifiers/sygus/synth_conjecture.cpp, test/regress/CMakeLists.txt, test/regress/regress1/sygus/yoni-true-sol.smt2",8,3,5,2.018542906,4,2447.0,8,444.5,143.0,0.0,17.0,0,False,1.0
z3,6ca039c855f2fcf2e3bd1791fe73dd848d872c73,c1a0ce0862b825e3d1d22a2defd23dcf1cda0542,Murphy Berzish,mtrberzi@users.noreply.github.com,2020/4/11 14:36,1586586990,"Z3str3: reset internal data structures in init_search_eh() (#3818)

* z3str3: fixes to solver state between check-sat calls, wip

* z3str3: reset many internal data structures during init_search_eh() to clean up state",111,3,"src/smt/theory_str.cpp, src/smt/theory_str.h",2,1,1,0.127418512,6,8551.0,2,1678.0,22.0,0.0,27.0,0,True,1.0
z3,ae5a713e815eb884a7f60d54ac489b14689b90e8,21a31fcd2610f1e3b3163ea432d71e5c4f320193,Nikolaj Bjorner,nbjorner@microsoft.com,2020/4/11 2:07,1586542036,"add missing fixed propagations on negated integer inequalities

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",92,94,"src/math/lp/lar_solver.h, src/math/lp/lp_types.h, src/math/lp/nla_core.cpp, src/qe/qe_arith_plugin.cpp, src/smt/smt_case_split_queue.cpp, src/smt/theory_arith_aux.h, src/smt/theory_lra.cpp, src/smt/theory_str_mc.cpp, src/solver/parallel_tactic.cpp",9,4,4,2.2832238,5,13188.0,9,1186.777778,68.0,0.0,25.0,0,True,1.0
z3,835b57b77584e0ec22a0976806b392447283763f,b04c97458daa2d8dc3a460df6a5fdc5936188447,Nikolaj Bjorner,nbjorner@microsoft.com,2020/4/14 17:34,1586856854,"na

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",4,0,src/ast/rewriter/seq_rewriter_params.pyg,1,1,1,0.0,3,0.0,1,-1.0,32.0,0.0,3.0,0,False,1.0
z3,e6174c89f312fc6ff29cedc247dbc5daad54bc73,d465938496acee3de07a5b27fada0b500b16c92c,Nikolaj Bjorner,nbjorner@microsoft.com,2020/4/15 15:54,1586937280,"add lower bounds on lengths if they are not present

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",3,1,src/smt/theory_seq.cpp,1,1,1,0.0,5,5657.0,1,1590.0,77.0,0.0,22.0,0,False,1.0
cvc5,94f8bafb38ccf380ace36259026a3b0959d13636,0f3e4d1c802e1fe5fd90e712a6382ff9ca2bab34,Andrew Reynolds,andrew.j.reynolds@gmail.com,2020/4/15 7:55,1586908541,"Do not mark string extended functions as eliminated after reduction lemmas (#4306)

The current policy marked extended functions in strings as ""reduced"" (eliminated) when we generated their reduction lemma. The upside is that the solver can effectively ignore them. The downside is that we cannot do context-dependent simplification on them, and hence we miss out conflicts during the remainder of the check-sat call.

This changes the policy so they are not marked as reduced. Instead, reduction lemmas are cached in the standard way while allowing context-dependent simplification.",23,15,"src/theory/strings/extf_solver.cpp, src/theory/strings/extf_solver.h",2,1,1,0.868040399,3,611.0,2,53.0,18.0,0.0,7.0,0,False,1.0
z3,b8bf6087ffeff104941a61d9d13b698daf1a75ef,3e9479d01a8c709138e051ad1932697db9a9913e,Nikolaj Bjorner,nbjorner@microsoft.com,2020/4/17 18:21,1587118900,"a lot of seq churn

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",388,282,"src/ast/rewriter/bv_trailing.cpp, src/ast/rewriter/bv_trailing.h, src/smt/seq_axioms.cpp, src/smt/seq_axioms.h, src/smt/seq_skolem.cpp, src/smt/seq_skolem.h, src/smt/smt_theory.h, src/smt/theory_seq.cpp, src/smt/theory_seq.h, src/util/trail.h",10,3,3,2.000145385,3,7387.0,10,1089.0,34.0,0.0,13.0,0,False,1.0
z3,d5eef9dd8b69a2eda4accdbf53f148f85d630b0e,501aa7927dba13a90e3fc9526c01a9d06e1704e3,Nikolaj Bjorner,nbjorner@microsoft.com,2020/4/17 6:14,1587075292,"split into seq_axioms and seq_skolem

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",1064,860,"src/ast/seq_decl_plugin.cpp, src/smt/CMakeLists.txt, src/smt/seq_axioms.cpp, src/smt/seq_axioms.h, src/smt/seq_skolem.cpp, src/smt/seq_skolem.h, src/smt/smt_theory.cpp, src/smt/smt_theory.h, src/smt/theory_seq.cpp, src/smt/theory_seq.h",10,2,2,2.031647471,5,7879.0,10,1241.9,117.0,0.0,33.0,0,False,1.0
z3,501aa7927dba13a90e3fc9526c01a9d06e1704e3,a83f72b65715d46f9434502af5322dd13e1e04e5,Nikolaj Bjorner,nbjorner@microsoft.com,2020/4/17 7:33,1587080023,"some fixes

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",30,16,"src/ast/rewriter/seq_rewriter.cpp, src/smt/seq_axioms.cpp, src/smt/seq_axioms.h, src/smt/seq_skolem.cpp, src/smt/theory_seq.cpp, src/smt/theory_seq.h",6,2,2,2.02593274,7,8740.0,6,795.5,188.0,0.0,62.0,0,True,1.0
z3,19e0285b835931a26edb4fb56892ea897822f477,79b776fee52621aec4a5a042060eab7a81b7853f,Nikolaj Bjorner,nbjorner@microsoft.com,2020/4/19 12:00,1587268838,"na

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",48,35,"src/smt/seq_axioms.cpp, src/smt/seq_axioms.h, src/smt/theory_seq.cpp, src/smt/theory_seq.h",4,1,1,1.158596471,7,4663.0,4,797.5,170.0,0.0,39.0,0,False,1.0
z3,339a2568b20b54a24ea324ab88b9e23a3da28e7d,fcc34a07b2ada3fde8f124172e20031de778ba50,Nikolaj Bjorner,nbjorner@microsoft.com,2020/4/19 12:36,1587270994,"fix #4019

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",16,12,src/smt/seq_axioms.cpp,1,1,1,0.0,3,497.0,1,1.0,44.0,0.0,9.0,0,True,1.0
z3,53c14bd55482ac884885ba48304b7e6859da679c,95a78b245004a823415118a9015b58787ac18ab9,Nikolaj Bjorner,nbjorner@microsoft.com,2020/4/22 13:18,1587532735,"updates to seq and bug fixes (#4056)

* na

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>

* fix #4037

* nicer output for skolem functions

* more overhaul of seq, some bug fixes

* na

* added offset_eq file

* na

* fix #4044

* fix #4040

* fix #4045

* updated ignore

* new rewrites for indexof based on #4036

* add shortcuts

* updated ne solver for seq, fix #4025

* use pair vectors for equalities that are reduced by seq_rewriter

* use erase_and_swap

* remove unit-walk

* na

* add check for #3200

* nits

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>

* name a type

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>

* remove fp check

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>

* remove unsound axiom instantiation for non-contains

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>

* fix rewrites

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>

* fix #4053

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>

* fix #4052

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",1516,1654,".gitignore, README.md, src/ast/ast_ll_pp.cpp, src/ast/rewriter/seq_rewriter.cpp, src/ast/rewriter/seq_rewriter.h, src/ast/seq_decl_plugin.h, src/math/simplex/sparse_matrix.h, src/math/simplex/sparse_matrix_def.h, src/sat/CMakeLists.txt, src/sat/ba_solver.cpp, src/sat/ba_solver.h, src/sat/sat_config.cpp, src/sat/sat_config.h, src/sat/sat_extension.h, src/sat/sat_params.pyg, src/sat/sat_solver.cpp, src/smt/CMakeLists.txt, src/smt/seq_axioms.cpp, src/smt/seq_axioms.h, src/smt/seq_eq_solver.cpp, src/smt/seq_ne_solver.cpp, src/smt/seq_offset_eq.cpp, src/smt/seq_offset_eq.h, src/smt/seq_skolem.cpp, src/smt/seq_skolem.h, src/smt/smt_conflict_resolution.cpp, src/smt/smt_enode.h, src/smt/smt_justification.cpp, src/smt/smt_setup.cpp, src/smt/smt_theory.h, src/smt/theory_arith_nl.h, src/smt/theory_recfun.cpp, src/smt/theory_seq.cpp, src/smt/theory_seq.h, src/tactic/bv/bvarray2uf_tactic.cpp, src/util/ref_pair_vector.h, src/util/scoped_vector.h",39,6,8,3.603726902,5,25183.0,38,1597.189189,78.0,0.0,39.0,1,True,1.0
z3,f94abf6512168bcd4a46f1255406b11d81a1909f,886f4cbee08f3e6f4fc06379a94d9471ce7ec86e,Nikolaj Bjorner,nbjorner@microsoft.com,2020/4/22 14:57,1587538663,"fix #4029 - propagate digit literals on all units if they haven't already been propagated

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",21,11,src/smt/theory_seq.cpp,1,1,1,0.0,3,3027.0,1,1597.0,33.0,0.0,7.0,0,True,1.0
z3,50d58114cf37e1b20b03b078d505249cfda73a9d,8f297666fe91a6088819da77999e12da0a598ccb,Nikolaj Bjorner,nbjorner@microsoft.com,2020/4/23 11:40,1587613216,"fix #4073

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",8,7,src/smt/theory_seq.cpp,1,1,1,0.0,8,3032.0,1,1598.0,213.0,0.0,48.0,0,True,1.0
z3,9c3f0190f4b74e8b34b73ad64d086888fddeb9a0,cc8cd2cc2f8ffd9206fea56f9aa3fb53bd6069a6,Nikolaj Bjorner,nbjorner@microsoft.com,2020/4/23 21:28,1587648499,"na

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",58,60,"src/ast/rewriter/seq_rewriter.cpp, src/ast/rewriter/seq_rewriter.h, src/smt/theory_seq.cpp, src/util/ref_vector.h",4,3,3,1.310150294,8,5892.0,4,1884.75,209.0,0.0,76.0,0,False,1.0
z3,9c3f0190f4b74e8b34b73ad64d086888fddeb9a0,cc8cd2cc2f8ffd9206fea56f9aa3fb53bd6069a6,Nikolaj Bjorner,nbjorner@microsoft.com,2020/4/23 21:28,1587648499,"na

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",58,60,"src/ast/rewriter/seq_rewriter.cpp, src/ast/rewriter/seq_rewriter.h, src/smt/theory_seq.cpp, src/util/ref_vector.h",4,3,3,1.310150294,5,5892.0,4,1884.75,69.0,0.0,35.0,0,False,1.0
cvc5,855143cfa1e4cf38f67ff99eba5d59e5a2786120,1cacd328b60713e21af6836c65007ebe3bfffa81,Andres Noetzli,andres.noetzli@gmail.com,2020/4/23 5:58,1587592680,"Introduce best content heuristic for strings (#4382)

* Introduce best content heuristic for strings

This commit introduces a ""best content heuristic"" to perform
context-dependent simplifications. The high-level idea is that for each
equivalence class for strings, we compute a representation that is a
string concatentation of constants and other string terms. For this
representation, we try to get as many letters in the string constants as
we can (i.e. the best approximation of the content). This ""best content""
representation is then used by `EXTF_EVAL` to perform simplifications.

Co-authored-by: Andrew Reynolds <andrew.j.reynolds@gmail.com>",202,76,"src/theory/strings/base_solver.cpp, src/theory/strings/base_solver.h, src/theory/strings/extf_solver.cpp",3,1,1,0.923842594,4,1169.0,3,72.33333333,4.0,0.0,12.0,0,False,1.0
z3,785c9a18cab28b9adfc71ec981f7452fd65279fd,9ea1cf3c5ce9baac66ae6e97e8a3a45604c1fc34,Nikolaj Bjorner,nbjorner@microsoft.com,2020/4/25 13:13,1587791605,"na

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",497,4,"src/ast/CMakeLists.txt, src/ast/value_generator.cpp, src/ast/value_generator.h, src/model/datatype_factory.cpp, src/test/CMakeLists.txt, src/test/main.cpp, src/test/value_generator.cpp, src/util/scoped_ptr_vector.h",8,4,4,1.165463564,8,825.0,8,1289.75,201.0,0.0,31.0,0,False,1.0
cvc5,8ea1603f55d940e56ab3cbee8177f06200228aaa,967332f464f3e26d43f05bb9c68a0be788337ef6,Andrew Reynolds,andrew.j.reynolds@gmail.com,2020/4/28 11:15,1588043700,"Support the SMT-LIB Unicode string standard by default (#4378)

This PR merges --lang=smt2.6.1 and --lang=smt2.6 (default). It makes it so that 2.6 always expects the syntax of the string standard http://smtlib.cs.uiowa.edu/theories-UnicodeStrings.shtml.

I've updated the regressions so that the 2.6 benchmarks are now compliant with the standard. Some of the <=2.5 benchmarks I've updated to 2.6. Others I have left for now, in particular the ones that rely on special characters or ad-hoc escape sequences. The old formats will be supported in the release but removed shortly afterwards.

This PR is a prerequisite for the release, but not necessarily SMT-COMP (which will use --lang=smt2.6.1 if needed). Notice that we still do not have parsing support for str.replace_re or str.replace_re_all. This is required to be fully compliant.",318,359,"contrib/competitions/smt-comp/run-script-smtcomp-current, contrib/competitions/smt-comp/run-script-smtcomp-current-unsat-cores, src/api/cvc4cpp.cpp, src/options/language.cpp, src/options/language.h, src/options/language.i, src/options/options_template.cpp, src/parser/parser.cpp, src/parser/parser.h, src/parser/smt2/smt2.cpp, src/printer/printer.cpp, src/printer/smt2/smt2_printer.cpp, src/printer/smt2/smt2_printer.h, src/smt/smt_engine.cpp, test/regress/regress0/lang_opts_2_6_1.smt2, test/regress/regress0/strings/bidir_star.smt2, test/regress/regress0/strings/bug001.smt2, test/regress/regress0/strings/char-representations.smt2, test/regress/regress0/strings/code-eval.smt2, test/regress/regress0/strings/code-perf.smt2, test/regress/regress0/strings/code-sat-neg-one.smt2, test/regress/regress0/strings/complement-simple.smt2, test/regress/regress0/strings/escchar_25.smt2, test/regress/regress0/strings/from_code.smt2, test/regress/regress0/strings/gen-esc-seq.smt2, test/regress/regress0/strings/is_digit_simple.smt2, test/regress/regress0/strings/issue1189.smt2, test/regress/regress0/strings/issue2958.smt2, test/regress/regress0/strings/issue3440.smt2, test/regress/regress0/strings/issue3497.smt2, test/regress/regress0/strings/issue3657-evalLeq.smt2, test/regress/regress0/strings/issue4070.smt2, test/regress/regress0/strings/issue4376.smt2, test/regress/regress0/strings/itos-entail.smt2, test/regress/regress0/strings/large-model.smt2, test/regress/regress0/strings/leadingzero001.smt2, test/regress/regress0/strings/loop-wrong-sem.smt2, test/regress/regress0/strings/model-code-point.smt2, test/regress/regress0/strings/model-friendly.smt2, test/regress/regress0/strings/norn-31.smt2, test/regress/regress0/strings/norn-simp-rew.smt2, test/regress/regress0/strings/re-syntax.smt2, test/regress/regress0/strings/re.all.smt2, test/regress/regress0/strings/re_diff.smt2, test/regress/regress0/strings/regexp_inclusion.smt2, test/regress/regress0/strings/regexp_inclusion_reduction.smt2, test/regress/regress0/strings/replace-const.smt2, test/regress/regress0/strings/replaceall-eval.smt2, test/regress/regress0/strings/rewrites-re-concat.smt2, test/regress/regress0/strings/rewrites-v2.smt2, test/regress/regress0/strings/std2.6.1.smt2, test/regress/regress0/strings/strip-endpoint-itos.smt2, test/regress/regress0/strings/tolower-rrs.smt2, test/regress/regress0/strings/type001.smt2, test/regress/regress0/strings/unicode-esc.smt2, test/regress/regress1/fmf/bug723-irrelevant-funs.smt2, test/regress/regress1/strings/artemis-0512-nonterm.smt2, test/regress/regress1/strings/bug615.smt2, test/regress/regress1/strings/bug799-min.smt2, test/regress/regress1/strings/code-sequence.smt2, test/regress/regress1/strings/complement-test.smt2, test/regress/regress1/strings/fmf001.smt2, test/regress/regress1/strings/fmf002.smt2, test/regress/regress1/strings/issue1684-regex.smt2, test/regress/regress1/strings/issue2060.smt2, test/regress/regress1/strings/issue2429-code.smt2, test/regress/regress1/strings/issue2981.smt2, test/regress/regress1/strings/issue2982.smt2, test/regress/regress1/strings/issue3090.smt2, test/regress/regress1/strings/issue3272.smt2, test/regress/regress1/strings/issue3357.smt2, test/regress/regress1/strings/kaluza-fl.smt2, test/regress/regress1/strings/no-lazy-pp-quant.smt2, test/regress/regress1/strings/non_termination_regular_expression4.smt2, test/regress/regress1/strings/norn-13.smt2, test/regress/regress1/strings/norn-360.smt2, test/regress/regress1/strings/norn-ab.smt2, test/regress/regress1/strings/norn-nel-bug-052116.smt2, test/regress/regress1/strings/norn-simp-rew-sat.smt2, test/regress/regress1/strings/nt6-dd.smt2, test/regress/regress1/strings/nterm-re-inter-sigma.smt2, test/regress/regress1/strings/pierre150331.smt2, test/regress/regress1/strings/policy_variable.smt2, test/regress/regress1/strings/query4674.smt2, test/regress/regress1/strings/query8485.smt2, test/regress/regress1/strings/re-agg-total1.smt2, test/regress/regress1/strings/re-agg-total2.smt2, test/regress/regress1/strings/re-all-char-hard.smt2, test/regress/regress1/strings/re-elim-exact.smt2, test/regress/regress1/strings/re-mod-eq.smt2, test/regress/regress1/strings/re-neg-concat-reduct.smt2, test/regress/regress1/strings/re-neg-unfold-rev-a.smt2, test/regress/regress1/strings/re-unsound-080718.smt2, test/regress/regress1/strings/regexp-strat-fix.smt2, test/regress/regress1/strings/regexp001.smt2, test/regress/regress1/strings/regexp002.smt2, test/regress/regress1/strings/regexp003.smt2, test/regress/regress1/strings/reloop.smt2, test/regress/regress1/strings/replaceall-len.smt2, test/regress/regress1/strings/replaceall-replace.smt2, test/regress/regress1/strings/rew-check1.smt2, test/regress/regress1/strings/simple-re-consume.smt2, test/regress/regress1/strings/stoi-400million.smt2, test/regress/regress1/strings/stoi-solve.smt2, test/regress/regress1/strings/str-code-sat.smt2, test/regress/regress1/strings/str-code-unsat-2.smt2, test/regress/regress1/strings/str-code-unsat-3.smt2, test/regress/regress1/strings/str-code-unsat.smt2, test/regress/regress1/strings/string-unsound-sem.smt2, test/regress/regress1/strings/type002.smt2, test/regress/regress1/strings/type003.smt2, test/regress/regress1/strings/username_checker_min.smt2, test/regress/regress2/strings/issue918.smt2, test/regress/regress2/strings/non_termination_regular_expression6.smt2, test/regress/regress2/strings/norn-dis-0707-3.smt2, test/regress/regress2/strings/range-perf.smt2, test/regress/regress2/strings/replaceall-diffrange.smt2, test/regress/regress2/strings/replaceall-len-c.smt2, test/regress/regress2/strings/small-1.smt2, test/unit/api/solver_black.h",120,8,14,6.492796663,4,13200.0,120,770.0583333,23.0,0.0,7.0,0,False,1.0
cvc5,beb4b2d81b47879004e09a4f626b9e4e189e8536,ad0b69e6a6242c2c7a2d060ff70ddd78861ca50a,Andres Noetzli,andres.noetzli@gmail.com,2020/4/28 13:10,1588050616,"Register lower bound for str.to_int (#4408)

This commit changes the term registration for str.to_int terms. Before, we were not sending out any lemmas when registering str.to_int terms. Now, we send a simple lemma that asserts that the value is greater or equal to negative one.",4,0,src/theory/strings/term_registry.cpp,1,1,1,0.0,3,495.0,1,12.0,2.0,0.0,8.0,0,False,1.0
z3,ee1d393150775e3c26cbafc195a0222ca925e83f,e67112f289aba5e8e6640cd7d8373a2e592ea8d6,Nikolaj Bjorner,nbjorner@microsoft.com,2020/4/28 20:19,1588076360,NYI control paths,22,8,"src/ackermannization/lackr_model_converter_lazy.cpp, src/muz/spacer/spacer_antiunify.cpp, src/smt/asserted_formulas.cpp, src/smt/smt_induction.cpp, src/smt/theory_seq.cpp, src/solver/solver_na2as.h, src/tactic/sls/sls_tracker.h",7,5,5,2.211537134,3,5171.0,7,1719.714286,25.0,0.0,8.0,0,False,1.0
cvc5,14a7be2b6fe6eb5b938927e20d275fe5c49db55e,22c36b3bceb5d1a73dc0f0355c0a01703db51acc,Andrew Reynolds,andrew.j.reynolds@gmail.com,2020/4/29 13:02,1588136522,"Avoid circular dependencies for justifying reductions in strings extf eval (#4415)

An incorrect answer of ""sat"" could be found after 8 seconds on the given benchmark (with --strings-fmf) due to a circular justification for why an extended function was reduced. In particular, we ran checkExtfInference on the same term twice and then marked it as reduced since we had already seen it. This makes the code more conservative.

Notice I'm making the code doubly conservative in case there is any chance for duplication again (e.g. if ExtTheory provides duplicate terms).",25,3,"src/theory/strings/extf_solver.cpp, test/regress/CMakeLists.txt, test/regress/regress3/strings/unsat-circ-reduce.smt2",3,2,3,1.185616163,4,541.0,3,342.0,166.0,0.0,23.0,0,False,1.0
cvc5,6ba68a1897838f3aefa6cbd254a1262326e446c7,67e5e3d2cf5e381bde65683b1244d1905e969a90,Andrew Reynolds,andrew.j.reynolds@gmail.com,2020/4/30 13:18,1588223906,"Do not mark congruent terms are reduced (#4419)

This fixes a potential model soundness issue in strings where a justification for why a string term was reduced relied on a circular argument. The issue involved ""reduced by congruence"" which states that when f(a) = f(b) ^ a = b in the current context, then one of f(a) or f(b) can be ignored.

However, it may be the case that a is an extended function whose reduction relies on f(b). If we were to assume that f(b) can be ignored due to f(a), then our reduction of f(a) is circular: the reduction of f(a) in the context where a=b relies on itself.

This was causing an incorrect model for QF_S/2020-sygus-qgen/queries/query3214.smt2. The sequence of dependencies was:

[1] (str.contains (str.substr x 1 (+ (- 1) (str.len x))) ""CA"") 
is congruent to
(str.contains (str.substr x (+ 2 (str.indexof x ""CA"" 1)) (+ (- 2) (str.len x) (* (- 1) (str.indexof x ""CA"" 1)))) ""CA"")
in the current context since they are equal and their arguments are equal.

[2] (str.substr x (+ 2 (str.indexof x ""CA"" 1)) (+ (- 2) (str.len x) (* (- 1) (str.indexof x ""CA"" 1))))
reduction relies on the length constraint:
(= (str.indexof x ""CA"" 1) (+ (- 2) (str.len sspre_66)))

[3] (str.indexof x ""CA"" 1) 
reduction relies on:
(not (str.contains (str.substr x 1 (+ (- 1) (str.len x))) ""CA"")) 
which was marked congruent above.
The benchmark now solves in 5 minutes 30 seconds (sat, with a correct model):

andrew@andrew-Latitude-7480:~/misc/strings$ time ajr-cvc4 query3214.smt2 --strings-exp --rewrite-divk --check-models --dump-models
sat
(model
(define-fun x () String ""QACOACA"")
)",8,3,src/theory/strings/base_solver.cpp,1,1,1,0.0,2,565.0,1,85.0,10.0,0.0,3.0,0,True,1.0
z3,54d981e88fc00b028ab0e0a72caa08acf82b63ef,077f2248ca788cd4f5c7db0ff0db8daa437cf69f,Nikolaj Bjorner,nbjorner@microsoft.com,2020/4/5 11:32,1586057573,"fix #3756

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",10,0,src/smt/theory_str.cpp,1,1,1,0.0,8,7797.0,1,1672.0,76.0,0.0,33.0,0,True,1.0
z3,2b929cb31e175a8e1df4680973dcb2c01eab826f,6d12540ceb8de7da344b0266e6a07824913adc5e,Lev Nachmanson,levnach@hotmail.com,2020/4/6 17:37,1586165857,"set arith.solver=6 by default

Signed-off-by: Lev Nachmanson <levnach@hotmail.com>",1,1,src/smt/params/smt_params_helper.pyg,1,1,1,0.0,5,0.0,1,2681.0,3.0,0.0,19.0,0,False,1.0
z3,2b929cb31e175a8e1df4680973dcb2c01eab826f,6d12540ceb8de7da344b0266e6a07824913adc5e,Lev Nachmanson,levnach@hotmail.com,2020/4/6 17:37,1586165857,"set arith.solver=6 by default

Signed-off-by: Lev Nachmanson <levnach@hotmail.com>",1,1,src/smt/params/smt_params_helper.pyg,1,1,1,0.0,5,0.0,1,2681.0,12.0,0.0,20.0,0,False,1.0
z3,0e78f092b5ffb4f866cbafd4fc1950363aa232c7,ae8c6acc1a5651571fc48e89be901214a978e7e2,Lev Nachmanson,levnach@hotmail.com,2020/4/7 15:21,1586244092,"fill columns to fill in random update as in theory_arith_aux.h

Signed-off-by: Lev Nachmanson <levnach@hotmail.com>",45,5,"src/math/lp/random_updater_def.h, src/smt/theory_lra.cpp",2,2,2,0.327444919,3,3582.0,2,685.5,0.0,0.0,6.0,0,False,1.0
z3,f04dfa71a6fc1431125f96c88305bd34ce8db366,57f622acc151d3cf1ed0db565c19dbe22b42baae,Lev Nachmanson,levnach@hotmail.com,2020/4/9 11:44,1586403856,"fixes in random_update()

Signed-off-by: Lev Nachmanson <levnach@hotmail.com>",33,48,"src/math/lp/random_updater.h, src/math/lp/random_updater_def.h",2,1,1,0.28376897,5,74.0,2,310.0,24.0,0.0,7.0,0,True,1.0
z3,76ac9917c8da5d172fba03121af8016090198958,5ced73afb5bc33ddfaf6a195f298985e8e90830e,Nikolaj Bjorner,nbjorner@microsoft.com,2020/4/9 14:00,1586412031,"decouple random update with assume eqs

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",11,14,src/smt/theory_lra.cpp,1,1,1,0.0,5,3505.0,1,1065.0,66.0,0.0,18.0,0,False,1.0
z3,e254e890a1285f54ab7914d7c4ac3aa7fb6c423b,bd0180925b6e78c231c2f89027d27b269341a6ad,Murphy Berzish,mtrberzi@users.noreply.github.com,2020/5/11 19:41,1589197315,z3str3: don't crash when finding initial bounds for a regex that has no solutions (#4276),3,2,src/smt/theory_str_regex.cpp,1,1,1,0.0,5,1297.0,1,198.0,21.0,0.0,25.0,0,False,1.0
cvc5,00badd3a63a2fa568373d5c58553944b579d42bb,3b50dfe623f44e97d85449fa2a7566e81c639b47,Andrew Reynolds,andrew.j.reynolds@gmail.com,2020/5/12 11:47,1589255267,"Do not enable unconstrained simplification if arithmetic is present (#4489)

For now we do not enable unconstrained simplification when arithmetic is present. Post SMT COMP, we should investigate making arithmetic not output lemmas during preprocessing (CVC4/cvc4-wishues#71).",5,3,src/smt/set_defaults.cpp,1,1,1,0.0,4,1248.0,1,45.0,165.0,0.0,1.0,0,False,1.0
z3,82fd2a062dc3859c44ee005d421eed0dc2fb3369,01279582ff92b88746b7af13939c4767355b6f3b,Lev Nachmanson,levnach@hotmail.com,2020/5/15 12:58,1589518714,"move nla stats to nla_core

Signed-off-by: Lev Nachmanson <levnach@hotmail.com>",34,11,"src/math/lp/nla_core.cpp, src/math/lp/nla_core.h, src/math/lp/nla_solver.cpp, src/math/lp/nla_solver.h, src/smt/theory_lra.cpp",5,2,2,1.968293849,8,5468.0,5,497.0,19.0,0.0,42.0,0,False,1.0
z3,90f5595067605480782840dca92d34ab999848fc,ccda9d56d7e1b91d9561e88c913b0c7c50d32a6d,Nikolaj Bjorner,nbjorner@microsoft.com,2020/5/15 15:57,1589529458,"fixes

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",2,0,src/math/lp/explanation.h,1,1,1,0.0,5,35.0,1,346.0,73.0,0.0,9.0,0,True,1.0
z3,"8b4929ccda8627cde702dd5973bd199a33babd39, 3c606ea9b206bb08df62855c2c1f14cccebdd1fb",ba40b3617661aaa83d9d54277fdd01d79023f327,Murphy Berzish,mtrberzi@users.noreply.github.com,2020/5/15 20:42,1589546527,"Merge pull request #4319 from mtrberzi/disable-get-grounded-concats

Z3str3: disable compute_contains() and get_grounded_concats() checks",2,0,,0,0,0,0.0,4,0.0,0,0.0,2.0,0.0,0.0,0,False,1.0
z3,1ab2ad07be50cacf4bf04545411338e6fdfccddc,4753d93bb721ab4eeb332c15659b1d4dfab19211,Nikolaj Bjorner,nbjorner@microsoft.com,2020/5/16 14:00,1589608802,"add some of the SMTLIB2.6 conventions and features to strings

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",27,6,"src/ast/rewriter/seq_rewriter.cpp, src/ast/rewriter/seq_rewriter.h, src/ast/seq_decl_plugin.cpp, src/ast/seq_decl_plugin.h",4,1,2,1.477736943,4,4070.0,4,2193.5,59.0,0.0,8.0,0,False,1.0
z3,1ab2ad07be50cacf4bf04545411338e6fdfccddc,4753d93bb721ab4eeb332c15659b1d4dfab19211,Nikolaj Bjorner,nbjorner@microsoft.com,2020/5/16 14:00,1589608802,"add some of the SMTLIB2.6 conventions and features to strings

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",27,6,"src/ast/rewriter/seq_rewriter.cpp, src/ast/rewriter/seq_rewriter.h, src/ast/seq_decl_plugin.cpp, src/ast/seq_decl_plugin.h",4,1,2,1.477736943,3,4070.0,4,2193.5,51.0,0.0,6.0,0,False,1.0
z3,d3c00ca2c3feb9fcf5baef160825ab7c1025e2c4,21c4d451d8778d0a987096eb3a55d1d77f18c58c,Nikolaj Bjorner,nbjorner@microsoft.com,2020/5/16 14:26,1589610404,"parse RegLan

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",36,16,"src/ast/seq_decl_plugin.cpp, src/ast/seq_decl_plugin.h",2,1,1,0.779349837,8,1437.0,2,2764.0,148.0,0.0,18.0,0,False,1.0
z3,21c4d451d8778d0a987096eb3a55d1d77f18c58c,6f0a3673574932e5105a5c136bafc148b25fe03c,Murphy Berzish,mtrberzi@users.noreply.github.com,2020/5/16 16:31,1589617907,add SMTLIB2.6 names for QF_SLIA and string-int conversion operators (#4341),14,7,"src/ast/seq_decl_plugin.cpp, src/cmd_context/check_logic.cpp, src/smt/smt_setup.cpp, src/solver/smt_logics.cpp",4,4,4,1.781416403,4,2621.0,4,2394.5,3.0,0.0,22.0,0,False,1.0
z3,b2bfb1faea933af69fbaeafb85daf3a2322528c9,34cc60410fce6c4b83dcdca8ee56d24718cae69a,Nikolaj Bjorner,nbjorner@microsoft.com,2020/5/17 5:08,1589663316,"additional str/re operators, remove encoding option from zstring

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",210,44,"src/api/api_seq.cpp, src/ast/rewriter/seq_rewriter.cpp, src/ast/rewriter/seq_rewriter.h, src/ast/seq_decl_plugin.cpp, src/ast/seq_decl_plugin.h, src/math/lp/nla_monotone_lemmas.cpp, src/math/lp/nla_order_lemmas.cpp, src/smt/seq_axioms.cpp, src/smt/seq_axioms.h",9,4,5,2.392606853,7,5335.0,9,1235.888889,159.0,0.0,59.0,0,False,1.0
z3,b2bfb1faea933af69fbaeafb85daf3a2322528c9,34cc60410fce6c4b83dcdca8ee56d24718cae69a,Nikolaj Bjorner,nbjorner@microsoft.com,2020/5/17 5:08,1589663316,"additional str/re operators, remove encoding option from zstring

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",210,44,"src/api/api_seq.cpp, src/ast/rewriter/seq_rewriter.cpp, src/ast/rewriter/seq_rewriter.h, src/ast/seq_decl_plugin.cpp, src/ast/seq_decl_plugin.h, src/math/lp/nla_monotone_lemmas.cpp, src/math/lp/nla_order_lemmas.cpp, src/smt/seq_axioms.cpp, src/smt/seq_axioms.h",9,4,5,2.392606853,4,5335.0,9,1235.888889,45.0,0.0,13.0,0,False,1.0
z3,3b0c40044f4c79c75f1778fa601f91848bcdecac,af2f74c05fbe36a8ef6428bbbe3b4d27f9cfdda1,Lev Nachmanson,levnach@hotmail.com,2020/5/19 12:38,1589863124,"smarter explanation.h (#4385)

* smarter explanation.h

Signed-off-by: Lev Nachmanson <levnach@hotmail.com>

* clean explanation API

Signed-off-by: Lev Nachmanson <levnach@hotmail.com>

* suppress warnings

Signed-off-by: Lev Nachmanson <levnach@hotmail.com>

* disable the warnings

Signed-off-by: Lev Nachmanson <levnach@hotmail.com>",109,89,"src/math/lp/explanation.h, src/math/lp/gomory.cpp, src/math/lp/hnf_cutter.cpp, src/math/lp/indexed_value.h, src/math/lp/int_branch.cpp, src/math/lp/int_gcd_test.cpp, src/math/lp/lar_solver.cpp, src/math/lp/nla_core.cpp, src/math/lp/nla_intervals.cpp, src/math/lp/nra_solver.cpp, src/math/lp/square_sparse_matrix_def.h, src/math/lp/var_eqs.h, src/smt/theory_lra.cpp, src/test/lp/gomory_test.h, src/test/lp/lp.cpp, src/test/lp/nla_solver_test.cpp",16,3,3,3.025145542,5,13816.0,16,426.125,7.0,0.0,33.0,0,False,1.0
z3,ce1fd26b1939611d5c14fb5ddd1923f319ade0d6,131dfc21011598eddafe3294c7772377fb77b2ca,Nikolaj Bjorner,nbjorner@microsoft.com,2020/5/21 21:04,1590066256,na,1,1,src/smt/smt_context.cpp,1,1,1,0.0,8,3585.0,1,2768.0,150.0,0.0,39.0,0,False,1.0
cvc5,863f229f992cbe02a64889675fc31950e0fe2859,0f9b0dd69bef6a108b1ccc185223733f1d8fa40d,Andrew Reynolds,andrew.j.reynolds@gmail.com,2020/5/21 23:10,1590073824,(proof-new) Minor update to strings solver state (#4510),16,2,"src/theory/strings/solver_state.cpp, src/theory/strings/solver_state.h, src/theory/strings/theory_strings.cpp",3,1,1,1.299736764,4,1313.0,3,959.0,20.0,0.0,10.0,0,False,1.0
z3,d6ad371934ab24ade0cb99fe6c7e85d2bd51196f,97b480ded34183201fbb3fd371f19cfead7cf696,Lev Nachmanson,levnach@hotmail.com,2020/5/24 17:06,1590311199,"Expl (#4462)

* cleaner API for explanation

Signed-off-by: Lev Nachmanson <levnach@hotmail.com>

* remove an unnecessery check

Signed-off-by: Lev Nachmanson <levnach@hotmail.com>

* expl

Signed-off-by: Lev Nachmanson <levnach@hotmail.com>",63,38,"src/math/lp/explanation.h, src/math/lp/lar_solver.cpp, src/smt/theory_lra.cpp, src/test/lp/gomory_test.h",4,3,3,0.853181734,8,5857.0,4,659.5,32.0,0.0,58.0,0,False,1.0
z3,4e01d5b5c10b3524051e7acf396bb6f992b219e9,e938ee33bbb27dfeaca5adc0c18a560d05793794,Nikolaj Bjorner,nbjorner@microsoft.com,2020/5/25 14:11,1590387111,"na

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",92,17,"src/ast/rewriter/arith_rewriter.cpp, src/ast/rewriter/arith_rewriter.h",2,1,1,0.307456533,8,1841.0,2,2770.0,74.0,0.0,15.0,0,False,1.0
z3,4e01d5b5c10b3524051e7acf396bb6f992b219e9,e938ee33bbb27dfeaca5adc0c18a560d05793794,Nikolaj Bjorner,nbjorner@microsoft.com,2020/5/25 14:11,1590387111,"na

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",92,17,"src/ast/rewriter/arith_rewriter.cpp, src/ast/rewriter/arith_rewriter.h",2,1,1,0.307456533,5,1841.0,2,2770.0,140.0,0.0,10.0,0,False,1.0
z3,e938ee33bbb27dfeaca5adc0c18a560d05793794,a97bc65af460e6b796b925dbbe667904c3fa431c,Nikolaj Bjorner,nbjorner@microsoft.com,2020/5/25 15:10,1590390645,"hoist co-factors eagerly without adding axioms

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",94,68,"src/ast/rewriter/seq_rewriter.cpp, src/ast/seq_decl_plugin.cpp, src/ast/seq_decl_plugin.h, src/smt/seq_regex.cpp, src/smt/seq_regex.h, src/smt/theory_seq.cpp",6,2,3,1.447893456,3,7888.0,6,1468.333333,45.0,0.0,16.0,0,False,1.0
z3,24a9ca3226b46d2739da1c668ca04d7399319ec2,9dd8ebb474aa291c494f31625a602d429579c376,Nikolaj Bjorner,nbjorner@microsoft.com,2020/5/27 10:10,1590545413,"fix build

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",23,21,"src/ast/rewriter/arith_rewriter.cpp, src/ast/rewriter/arith_rewriter.h, src/smt/seq_regex.cpp",3,2,2,1.324731858,4,2124.0,3,1848.333333,66.0,0.0,23.0,0,True,1.0
z3,56bf4c144b413392b3749c57904498f8c652b510,f3b2a082ae344f3aa719d537c002f02d14c15847,Murphy Berzish,mtrberzi@users.noreply.github.com,2020/5/28 11:57,1590638228,"z3str3: make counterexamples less naive, and check regex membership more efficiently (#4358)

* z3str3: make counterexamples less naive, and check regex membership more efficiently

* z3str3: construct even better counterexamples for regex membership",94,83,"src/smt/theory_str.cpp, src/smt/theory_str_mc.cpp, src/smt/theory_str_regex.cpp",3,1,1,1.571943924,6,9505.0,3,691.6666667,24.0,0.0,28.0,0,False,1.0
z3,ccebd4db59c78edeca46344e1b4e2402e4368c8d,71ea7287bb652be01319f8356f7ca2fc068b0b17,Murphy Berzish,mtrberzi@users.noreply.github.com,2020/5/28 11:57,1590638253,"z3str3: detect and give up when symbolic automaton construction fails (#4384)

typically this will happen due to non-constant terms in a RegLan expression",28,7,"src/smt/theory_str.cpp, src/smt/theory_str.h, src/smt/theory_str_regex.cpp",3,1,1,0.894552209,8,9105.0,3,1221.666667,27.0,0.0,32.0,0,False,1.0
z3,f3b2a082ae344f3aa719d537c002f02d14c15847,ccebd4db59c78edeca46344e1b4e2402e4368c8d,Murphy Berzish,mtrberzi@users.noreply.github.com,2020/5/28 11:57,1590638242,z3str3: allow leading zeroes in str.to_int (#4381),42,22,src/smt/theory_str.cpp,1,1,1,0.0,5,7229.0,1,1725.0,20.0,0.0,23.0,0,False,1.0
z3,ccebd4db59c78edeca46344e1b4e2402e4368c8d,71ea7287bb652be01319f8356f7ca2fc068b0b17,Murphy Berzish,mtrberzi@users.noreply.github.com,2020/5/28 11:57,1590638253,"z3str3: detect and give up when symbolic automaton construction fails (#4384)

typically this will happen due to non-constant terms in a RegLan expression",28,7,"src/smt/theory_str.cpp, src/smt/theory_str.h, src/smt/theory_str_regex.cpp",3,1,1,0.894552209,6,9105.0,3,1221.666667,0.0,0.0,33.0,0,False,1.0
z3,3d9d52f7427214f3b1ceecb0ae6683a43e841ab7,c939195c10e2bf9e1d8d39e0e3b14e6ffb695420,calebstanford-msr,65260146+calebstanford-msr@users.noreply.github.com,2020/5/29 16:00,1590739237,"add regex support for reverse and left/right derivative rewriting (#4477)

* partial work on adding 'reverse' (broken code)

* new op codes for derivative and reverse + associated rewrite rules

* incorporate reverses and derivatives in rewriter + some fixes

* enable rewriting str.in_re constraints with right derivative",253,109,"src/ast/rewriter/seq_rewriter.cpp, src/ast/rewriter/seq_rewriter.h, src/ast/seq_decl_plugin.cpp, src/ast/seq_decl_plugin.h, src/smt/seq_regex.cpp",5,2,3,0.655022479,7,5373.0,5,1766.2,0.0,0.0,48.0,0,True,1.0
z3,3d9d52f7427214f3b1ceecb0ae6683a43e841ab7,c939195c10e2bf9e1d8d39e0e3b14e6ffb695420,calebstanford-msr,65260146+calebstanford-msr@users.noreply.github.com,2020/5/29 16:00,1590739237,"add regex support for reverse and left/right derivative rewriting (#4477)

* partial work on adding 'reverse' (broken code)

* new op codes for derivative and reverse + associated rewrite rules

* incorporate reverses and derivatives in rewriter + some fixes

* enable rewriting str.in_re constraints with right derivative",253,109,"src/ast/rewriter/seq_rewriter.cpp, src/ast/rewriter/seq_rewriter.h, src/ast/seq_decl_plugin.cpp, src/ast/seq_decl_plugin.h, src/smt/seq_regex.cpp",5,2,3,0.655022479,8,5373.0,5,1766.2,0.0,0.0,44.0,0,True,1.0
z3,d41ecda03ef7dcc05d3538595c6ddd398809a531,c92a63690d96c20ded688c2eab5363d05928e598,Nikolaj Bjorner,nbjorner@microsoft.com,2020/5/29 17:47,1590745644,"enable parsing (_ char ..)

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",12,1,"src/ast/seq_decl_plugin.cpp, src/ast/seq_decl_plugin.h, src/parsers/smt2/smt2parser.cpp",3,2,2,1.140115679,7,4453.0,3,2775.0,182.0,0.0,18.0,0,False,1.0
z3,d41ecda03ef7dcc05d3538595c6ddd398809a531,c92a63690d96c20ded688c2eab5363d05928e598,Nikolaj Bjorner,nbjorner@microsoft.com,2020/5/29 17:47,1590745644,"enable parsing (_ char ..)

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",12,1,"src/ast/seq_decl_plugin.cpp, src/ast/seq_decl_plugin.h, src/parsers/smt2/smt2parser.cpp",3,2,2,1.140115679,4,4453.0,3,2775.0,56.0,0.0,6.0,0,False,1.0
z3,d3e4dd69f8c20f7a0ff1e81b03250732aa150604,6a540e8429716b3816155f7a14faf3e455461828,Nikolaj Bjorner,nbjorner@microsoft.com,2020/5/3 17:16,1588497406,"add Julia to pipeline (#4199)

* add Julia to pipeline

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>

* na

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>

* na

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",115,59,"azure-pipelines.yml, src/ast/rewriter/seq_rewriter.cpp, src/ast/rewriter/seq_rewriter.h",3,1,2,0.890052999,5,2637.0,3,1183.666667,155.0,0.0,12.0,0,False,1.0
z3,d3e4dd69f8c20f7a0ff1e81b03250732aa150604,6a540e8429716b3816155f7a14faf3e455461828,Nikolaj Bjorner,nbjorner@microsoft.com,2020/5/3 17:16,1588497406,"add Julia to pipeline (#4199)

* add Julia to pipeline

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>

* na

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>

* na

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",115,59,"azure-pipelines.yml, src/ast/rewriter/seq_rewriter.cpp, src/ast/rewriter/seq_rewriter.h",3,1,2,0.890052999,8,2637.0,3,1183.666667,142.0,0.0,17.0,0,False,1.0
z3,6a45c5d17ce5b450a473902b7bdaa202b416aac6,d372af4782f754b4f134ff82773a511e6814e248,Nikolaj Bjorner,nbjorner@microsoft.com,2020/5/30 15:36,1590824177,"add stub for cheap equality propagation

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",131,105,"src/math/lp/bound_analyzer_on_row.h, src/math/lp/lar_core_solver.h, src/math/lp/lar_core_solver_def.h, src/math/lp/lar_solver.cpp, src/math/lp/lp_bound_propagator.h, src/math/lp/lp_core_solver_base_def.h, src/math/lp/lp_primal_core_solver.h, src/math/lp/lu_def.h, src/math/lp/static_matrix.h, src/math/lp/static_matrix_def.h, src/smt/seq_regex.cpp, src/smt/theory_lra.cpp, src/smt/theory_seq.cpp",13,2,2,2.835120588,5,13332.0,13,489.6153846,127.0,0.0,29.0,0,False,1.0
z3,2e714fca7c334bf63e18e5e18daa1cf8f5b339fa,cceae2e3f088e91c921d107a4592a9af2978e4a7,Nikolaj Bjorner,nbjorner@microsoft.com,2020/5/7 17:27,1588843642,"old solver as default

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",1,1,src/smt/params/smt_params_helper.pyg,1,1,1,0.0,5,0.0,1,2712.0,67.0,0.0,20.0,0,False,1.0
z3,da82826a879ecf8bdb3dcf6853dc48876c7bb56c,878f297dac0ad623a5670d5d2b1c29304515daba,Mathias Soeken,mathias.soeken@epfl.ch,2019-01-01 17:20:33,1546334433,Make Ubuntu package more generic.,2,6,scripts/mk_nuget_release.py,1,1,1,-0.0,1,80.0,1,47.0,0.0,0.0,0.0,0,False,0.0
z3,"da82826a879ecf8bdb3dcf6853dc48876c7bb56c, 878f297dac0ad623a5670d5d2b1c29304515daba",b0fe7d9a219f60a66a31b07c3413105b09830988,Nikolaj Bjorner,nbjorner@microsoft.com,2019-01-02 11:02:08,1546398128,"Merge pull request #2056 from msoeken/nuget-release

Make Ubuntu package more generic",2,6,,0,0,0,0.0,1,0.0,0,0.0,0.0,0.0,0.0,0,False,0.0
cvc5,2f01f504b0c23fbf3bf57252df807079fcd6958e,e4e8d99ec19598c77144d3ffde2b5792db4430d3,Aina Niemetz,aina.niemetz@gmail.com,2019-01-02 20:07:43,1546430863,New C++ API: Add tests for mk-functions in solver object. (#2764),1019,358,"examples/api/combination-new.cpp, examples/api/datatypes-new.cpp, examples/api/linear_arith-new.cpp, examples/api/sets-new.cpp, examples/api/strings-new.cpp, src/api/cvc4cpp.cpp, src/api/cvc4cpp.h, src/api/cvc4cppkind.h, test/unit/api/solver_black.h, test/unit/api/term_black.h",10,2,3,1.6072109178382543,1,4876.0,10,161.7,0.0,0.0,0.0,0,False,0.0
cvc5,99278c017e5b198b416d4a82b0ea63f99d02e739,d96815ffdd4ee0bf9422b7f0194a23a0a42462c3,Andres Noetzli,andres.noetzli@gmail.com,2019-01-03 14:48:18,1546498098,API/Smt2 parser: refactor termAtomic (#2674),519,125,"src/api/cvc4cpp.cpp, src/api/cvc4cpp.h, src/parser/parser.cpp, src/parser/parser.h, src/parser/smt2/Smt2.g, test/unit/api/CMakeLists.txt, test/unit/api/datatype_api_black.h, test/unit/api/solver_black.h",8,3,4,2.2392986088074447,3,4817.0,8,1295.625,3.0,0.0,4.0,0,False,0.0
cvc5,e4e8d99ec19598c77144d3ffde2b5792db4430d3,f179953e2fea6955650ccde8414f2ccd8ee6f63b,Alex Ozdemir,aozdemir@hmc.edu,2019-01-03 15:39:35,1546501175,"[LRA proof] Recording & Printing LRA Proofs (#2758)

* [LRA proof] Recording & Printing LRA Proofs

Now we use the ArithProofRecorder to record and later print arithmetic
proofs.

If an LRA lemma can be proven by a single farkas proof, then that is
done. Otherwise, we `trust` the lemma.

I haven't **really** enabled LRA proofs yet, so `--check-proofs` still
is a no-op for LRA.

To test, do
```
lfsccvc4 <(./bin/cvc4 --dump-proofs ../test/regress/regress0/lemmas/mode_cntrl.induction.smt | tail -n +2)
```

where `lfsccvc4` is an alias invoking `lfscc` with all the necessary
signatures. On my machine that is:

```
alias lfsccvc4=""/home/aozdemir/repos/LFSC/build/src/lfscc \
/home/aozdemir/repos/CVC4/proofs/signatures/sat.plf \
/home/aozdemir/repos/CVC4/proofs/signatures/smt.plf \
/home/aozdemir/repos/CVC4/proofs/signatures/lrat.plf \
/home/aozdemir/repos/CVC4/proofs/signatures/th_base.plf \
/home/aozdemir/repos/CVC4/proofs/signatures/th_bv.plf \
/home/aozdemir/repos/CVC4/proofs/signatures/th_bv_bitblast.plf \
/home/aozdemir/repos/CVC4/proofs/signatures/th_arrays.plf \
/home/aozdemir/repos/CVC4/proofs/signatures/th_int.plf \
/home/aozdemir/repos/CVC4/proofs/signatures/th_quant.plf \
/home/aozdemir/repos/CVC4/proofs/signatures/th_real.plf \
/home/aozdemir/repos/CVC4/proofs/signatures/th_real.plf""

```

* Added guards to proof recording

Also reverted some small, unintentional changes.

Also had to add printing for STRING_SUBSTR??

* Responding to Yoni's review

* SimpleFarkasProof examples

* Respond to Aina's comments

* Reorder Constraint declarations

* fix build

* Moved friend declaration in Constraint

* Trichotomy example

* Lift getNumChildren invocation in PLUS case

Credits to aina for spotting it.

* Clang-format",862,338,"src/printer/cvc/cvc_printer.cpp, src/proof/arith_proof.cpp, src/proof/arith_proof.h, src/proof/arith_proof_recorder.cpp, src/theory/arith/constraint.cpp, src/theory/arith/constraint.h, src/theory/arith/theory_arith_private.cpp",7,3,3,1.7761636087362214,2,8912.0,7,1714.0,0.0,0.0,0.0,0,True,0.0
cvc5,f179953e2fea6955650ccde8414f2ccd8ee6f63b,99278c017e5b198b416d4a82b0ea63f99d02e739,Andres Noetzli,andres.noetzli@gmail.com,2019-01-03 17:55:45,1546509345,"C++ API: Reintroduce zero-value mkBitVector method (#2770)

PR #2764 removed `Solver::mkBitVector(uint32_t)` (returns a bit-vector
of a given size with value zero), which made the build fail when SymFPU
was enabled because solver_black used it for SymFPU-enabled builds. This
commit simply adds a zero default argument to `mkBitVector(uint32_t,
uint64_t)` to allow users to create zero-valued bit-vectors without
explicitly specifying the value again. Additionally, the commit replaces
the use of the `CVC4_USE_SYMFPU` macro by a call to
`Configuration::isBuiltWithSymFPU()`, making sure that we can catch
compile-time errors regardless of configuration. Finally,
`Solver::mkConst(Kind, uint32_t, uint32_t, Term)` now checks whether
CVC4 has been compiled with SymFPU when creating a `CONST_FLOATINGPOINT`
and throws an exception otherwise (solver_black has been updated
correspondingly).",15,5,"src/api/cvc4cpp.cpp, src/api/cvc4cpp.h, test/unit/api/solver_black.h",3,2,2,1.278897902987479,3,3762.0,3,145.0,0.0,0.0,2.0,0,False,0.0
cvc5,d96815ffdd4ee0bf9422b7f0194a23a0a42462c3,b06f9b64b55780de693ce9e1a38565f1e34cc5a0,Aina Niemetz,aina.niemetz@gmail.com,2019-01-03 19:29:43,1546514983,New C++ API: Add missing catch blocks for std::invalid_argument. (#2772),172,68,src/api/cvc4cpp.cpp,1,1,1,-0.0,3,2839.0,1,188.0,10.0,0.0,3.0,0,False,0.0
z3,b533ba39d64af84fc5a792f15a8ac98fac86b9bb,0d400a5ad61ee457f3c53399461d347adcf0d604,Nikolaj Bjorner,nbjorner@microsoft.com,2019-01-04 07:46:53,1546559213,"fix bit2bool bug reported by Jianying Li

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",49,20,"src/ast/rewriter/bv_rewriter.cpp, src/ast/rewriter/bv_rewriter.h, src/cmd_context/extra_cmds/dbg_cmds.cpp, src/qe/qe_arrays.cpp, src/qe/qe_mbi.cpp, src/qe/qe_mbi.h, src/smt/theory_pb.cpp, src/smt/theory_seq.cpp, src/smt/theory_str.cpp",9,4,4,2.691179408458771,2,21628.0,9,1381.3333333333333,0.0,0.0,0.0,1,True,0.0
z3,"0d400a5ad61ee457f3c53399461d347adcf0d604, b0fe7d9a219f60a66a31b07c3413105b09830988",425c47bc81498915616202a1417f09058bfb2a48,Nikolaj Bjorner,nbjorner@microsoft.com,2019-01-04 07:47:00,1546559220,Merge branch 'master' of https://github.com/z3prover/z3,471,15,,0,0,0,0.0,2,0.0,0,0.0,9.0,0.0,0.0,0,False,0.0
z3,425c47bc81498915616202a1417f09058bfb2a48,fb397cbe25f9e20c541ba0880e0c4b2c2f05bce5,Nikolaj Bjorner,nbjorner@microsoft.com,2019-01-04 08:18:40,1546561120,"remove incorrect assertion

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",0,2,src/smt/theory_bv.cpp,1,1,1,-0.0,2,1379.0,1,2265.0,9.0,0.0,1.0,0,False,0.0
cvc5,b06f9b64b55780de693ce9e1a38565f1e34cc5a0,491a7c8d1889dfb848de31d5581d0c784167eaec,Alex Ozdemir,aozdemir@hmc.edu,2019-01-04 09:57:27,1546567047,"[LRAT] A C++ data structure for LRAT. (#2737)

* [LRAT] A C++ data structure for LRAT.

Added a data structure for storing (abstract) LRAT proofs.

The constructor will take a drat binary proof and convert it to LRAT
using drat-trim. However, this is unimplemented in this PR.

Subsequent PRs will add:
   * LFSC representation of LRAT
   * Bitvector Proofs based on LRAT
   * Enabled tests for those proofs

* Documenting LRAT constructors

* Apply suggestions from code review

Co-Authored-By: alex-ozdemir <aozdemir@hmc.edu>

* Responding to Andres' review

Consisting of
   * Naming nits
   * Closed fds
   * Better implementation of disjoint union for LratInstruction
   * DRAT -> LRAT conversion is no longer an LratProof constructor

* include reorder

* Update src/proof/lrat/lrat_proof.h

Co-Authored-By: alex-ozdemir <aozdemir@hmc.edu>

* Addressed Andres' comments

* ANonymous namespaces and name resolution?

* Remove inlines, fix i negation

Thanks Andres!

* Use `std::abs`

Credit to Andres

Co-Authored-By: alex-ozdemir <aozdemir@hmc.edu>

* Remove uneeded public",509,0,"src/CMakeLists.txt, src/proof/lrat/lrat_proof.cpp, src/proof/lrat/lrat_proof.h",3,2,2,0.9373728661308672,3,356.0,3,159.0,7.0,0.0,1.0,0,True,0.0
cvc5,491a7c8d1889dfb848de31d5581d0c784167eaec,7684686a1f75a90a3754bacc82ee50fb7b20d7c9,Andres Noetzli,andres.noetzli@gmail.com,2019-01-04 13:26:08,1546579568,"C++ API: Fix OOB read in unit test (#2774)

There were two typos in the unit tests that caused OOB accesses. Instead
of doing `d_solver.mkConst(CONST_BITVECTOR, std::string(""101""), 6)`, the
closing parenthesis was in the wrong place resulting in
`std::string(""101"", 6)`. The second argument to `std::string(const
char*, size_t)` says how many characters to copy and results in
undefined behavior if the number is greater than the length of the
string, thus the OOB access. The commit fixes the typo and removes one
of the tests because it should not actually fail (16 is an accepted
base).",1,3,test/unit/api/solver_black.h,1,1,1,-0.0,3,658.0,1,59.0,11.0,0.0,3.0,0,True,0.0
z3,e770f37f52999c1ca7e780b3bad30033232b9f3c,e1a9154555486ec574b10d0d23e043f748f61683,Carsten Varming,varming@amazon.com,2019-01-04 17:02:56,1546592576,Specify UTF-8 encoding in python build scripts,6,4,"scripts/mk_genfile_common.py, scripts/mk_util.py",2,2,1,0.8812908992306927,5,3767.0,2,1648.0,0.0,0.0,0.0,0,False,0.0
z3,4b29b208ad1754c81df21936ac41c7464a10c6a2,83e3a79bd1cf925324bb63a214da7d78ed1653f7,Huanyi Chen,huanyi-chen@hotmail.com,2019-01-04 17:26:00,1546593960,Remove testcase that takes long time to finish,1,1,examples/python/mini_ic3.py,1,1,1,-0.0,3,381.0,1,110.0,0.0,0.0,0.0,0,False,0.0
cvc5,7684686a1f75a90a3754bacc82ee50fb7b20d7c9,716626f2f41f51cda38834e5c9dc691b0c4fd664,Mathias Preiner,mathias.preiner@gmail.com,2019-01-04 20:21:10,1546604470,"cmake: Disable unit tests for static builds. (#2775)

--static now implies --no-unit-testing.

Fixes #2672.",7,9,CMakeLists.txt,1,0,1,-0.0,4,0.0,1,479.0,0.0,0.0,0.0,0,True,0.0
z3,"fb397cbe25f9e20c541ba0880e0c4b2c2f05bce5, 19471f9fa374b79a85227a9a454d9f184a79608d",e770f37f52999c1ca7e780b3bad30033232b9f3c,Nikolaj Bjorner,nbjorner@microsoft.com,2019-01-05 08:05:42,1546646742,"Merge pull request #2062 from Chen-Huanyi/master

Implement QUIP variant in mini_quip",787,73,,0,0,0,0.0,3,0.0,0,0.0,10.0,0.0,0.0,0,False,0.0
z3,6d2cf4f464d5fec4dbae1afe907c9d077664ee81,58def55796aa53f8c000629024431cf4ff82bcf1,nilsbecker,nbecker@student.ethz.ch,2019-01-05 14:44:06,1546670646,mbqi support,42,32,"src/ast/ast.cpp, src/smt/smt_quantifier.cpp",2,2,2,0.3033748360864139,4,3503.0,2,2266.5,0.0,0.0,3.0,0,False,0.0
z3,e770f37f52999c1ca7e780b3bad30033232b9f3c,71e239c08efb201640bb4c0224e87a5c03291964,Nikolaj Bjorner,nbjorner@microsoft.com,2019-01-06 11:49:47,1546746587,"fix #2061

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",38,2,"src/ast/rewriter/seq_rewriter.cpp, src/ast/rewriter/seq_rewriter.h, src/qe/qe_mbp.cpp",3,2,2,0.6338054550605168,6,2740.0,3,1092.0,10.0,0.0,3.0,0,True,0.0
z3,e770f37f52999c1ca7e780b3bad30033232b9f3c,7e1ce2a16c2ccbeeece41b4457e6451f4e7faa8b,Bruce Mitchener,bruce.mitchener@gmail.com,2019-01-06 12:06:53,1546747613,"Define NO_Z3_DEBUGGER for iOS builds.

This is defined because we can't call `system` (via `invoke_gdb`)
on iOS and related platforms.",7,0,src/util/debug.h,1,1,1,-0.0,6,15.0,1,2268.0,4.0,0.0,1.0,1,True,0.0
z3,e770f37f52999c1ca7e780b3bad30033232b9f3c,a06bc497102cdfbf49e086b33d196e8bb38f8d54,Bruce Mitchener,bruce.mitchener@gmail.com,2019-01-06 12:15:31,1546748131,"Let str_hashtable store `const char*`.

This removes some boilerplate const casting.",11,12,"src/util/debug.cpp, src/util/str_hashtable.h, src/util/symbol.cpp, src/util/trace.cpp",4,1,1,1.8475239116381137,6,231.0,4,2268.0,0.0,0.0,0.0,0,False,0.0
z3,"e770f37f52999c1ca7e780b3bad30033232b9f3c, e1a9154555486ec574b10d0d23e043f748f61683",ed4223af94667d95dae8a4fc96c300f7d2675a8e,Nikolaj Bjorner,nbjorner@microsoft.com,2019-01-06 12:58:37,1546750717,"Merge pull request #2064 from varming/cv/utf8

Specify UTF-8 encoding in python scripts",6,4,,0,0,0,0.0,5,0.0,0,0.0,10.0,0.0,0.0,0,False,0.0
z3,"71e239c08efb201640bb4c0224e87a5c03291964, ed4223af94667d95dae8a4fc96c300f7d2675a8e",6f6880812b772b606eb0233a1d94acf782233ce9,Nikolaj Bjorner,nbjorner@microsoft.com,2019-01-06 13:01:19,1546750879,Merge branch 'master' of https://github.com/z3prover/z3,6,4,,0,0,0,0.0,6,0.0,0,0.0,13.0,0.0,0.0,0,False,0.0
z3,6f6880812b772b606eb0233a1d94acf782233ce9,a87f7a14d33a6f9fe8c97b2ab583b85eaec5b862,Nikolaj Bjorner,nbjorner@microsoft.com,2019-01-06 13:46:04,1546753564,"ever so gentle slap over the fingers for not using real regular expressions, #2058

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",10,1,"src/api/c++/z3++.h, src/smt/theory_seq.cpp",2,2,2,0.94566030460064,6,7433.0,2,1691.0,13.0,0.0,3.0,0,False,0.0
z3,a87f7a14d33a6f9fe8c97b2ab583b85eaec5b862,ea48d0a95a32401f74cb20eece3422a7b3030346,Nikolaj Bjorner,nbjorner@microsoft.com,2019-01-06 18:55:00,1546772100,"add set method to iterator, #2068, a set method to the vector template was also added

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",3,0,src/api/c++/z3++.h,1,1,1,-0.0,6,2487.0,1,2257.0,15.0,0.0,1.0,0,False,0.0
z3,"ea48d0a95a32401f74cb20eece3422a7b3030346, a06bc497102cdfbf49e086b33d196e8bb38f8d54",8ad2f70aaa0acf0f6d401ab5935da72a7b3f9f0f,Nikolaj Bjorner,nbjorner@microsoft.com,2019-01-06 18:55:32,1546772132,"Merge pull request #2066 from waywardmonkeys/const-str-hashtable

Let str_hashtable store `const char*`.",11,12,,0,0,0,0.0,6,0.0,0,0.0,16.0,0.0,0.0,0,False,0.0
z3,"8ad2f70aaa0acf0f6d401ab5935da72a7b3f9f0f, 7e1ce2a16c2ccbeeece41b4457e6451f4e7faa8b",2486971094f1552ec0ab6ee127fa3c75ff98379d,Nikolaj Bjorner,nbjorner@microsoft.com,2019-01-06 18:56:03,1546772163,"Merge pull request #2065 from waywardmonkeys/improve-ios-support

Define NO_Z3_DEBUGGER for iOS builds.",7,0,,0,0,0,0.0,6,0.0,0,0.0,16.0,0.0,0.0,1,True,0.0
z3,"2486971094f1552ec0ab6ee127fa3c75ff98379d, 947687d35069f0ea46cc38393a05e4a793668c9d",dc94d83c2e9784986f496362562c7f1abf584cc1,Nikolaj Bjorner,nbjorner@microsoft.com,2019-01-06 18:56:32,1546772192,"Merge pull request #2051 from waywardmonkeys/wasm-builds

Allow emscripten builds.",9,0,,0,0,0,0.0,6,0.0,0,0.0,16.0,0.0,0.0,0,False,0.0
cvc5,716626f2f41f51cda38834e5c9dc691b0c4fd664,610952322417e3758f2b62300f618721c269b2b3,Alex Ozdemir,aozdemir@hmc.edu,2019-01-06 19:32:42,1546774362,"[DRAT] DRAT data structure  (#2767)

* Copied old DRAT data-structure files.

Next step: clean up the code, and adapt them to our current usage plans.

* Polished the DRAT class.

Notably, removed the idea of lazy-parsing, this is now just a DRAT
wrapper class.

More explicit about whether methods handle binary or text.

Better constructor patterns

* Added implementation of textual DRAT output

* reordered the DratInstruction structure.
* removed the public modifier from the above struct
* removed the operator << implementation for DratInstruction

* use emplace_back

* Addressing Yoni's first review

* Extracted ""write literal in DIMACS format"" idea as a function
* Replaced some spurious Debug streams with `os`. (they were left over
from an earlier refactor)
* Improved some documentation

* Removed aside about std::string

* Addressed Mathias' comments

Specifically
* SCREAMING_SNAKE_CASED enum variants.
* Extracted some common logic from two branches of a conditional.
* Cleaned out some undefined behavior from bit manipulation.

* Unit tests for binary DRAT parsing

* Added text output test

* s/white/black/ derp",529,0,"src/CMakeLists.txt, src/proof/drat/drat_proof.cpp, src/proof/drat/drat_proof.h, test/unit/CMakeLists.txt, test/unit/proof/CMakeLists.txt, test/unit/proof/drat_proof_black.h",6,3,4,1.6239525200033689,4,304.0,6,159.66666666666666,10.0,0.0,7.0,1,True,0.0
z3,ea48d0a95a32401f74cb20eece3422a7b3030346,611314913895c4fca80dde62c07c1fb4d2eddc59,Nikolaj Bjorner,nbjorner@microsoft.com,2019-01-06 20:20:34,1546777234,"fix #2060. Code comment was right, code wasn't. Code comment and code could also be tuned

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",4,2,src/smt/theory_seq.cpp,1,1,1,-0.0,6,4951.0,1,1125.0,16.0,0.0,4.0,0,True,0.0
z3,"611314913895c4fca80dde62c07c1fb4d2eddc59, dc94d83c2e9784986f496362562c7f1abf584cc1",bde4ddd861dde6a4b24f4afd597a5f343c351366,Nikolaj Bjorner,nbjorner@microsoft.com,2019-01-06 20:20:55,1546777255,Merge branch 'master' of https://github.com/z3prover/z3,27,12,,0,0,0,0.0,6,0.0,0,0.0,17.0,0.0,0.0,0,False,0.0
z3,fb397cbe25f9e20c541ba0880e0c4b2c2f05bce5,cec34c745a7e34d07f2390f4b6e7f9dca4626fb3,Nikolaj Bjorner,nbjorner@microsoft.com,2019-01-07 09:00:11,1546822811,"defer blocking propagation until all properties of literal have been axiomatized. Deals with seq part of #2071

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",10,7,src/smt/theory_seq.cpp,1,1,1,-0.0,6,4943.0,1,1126.0,17.0,0.0,5.0,0,False,0.0
z3,"cec34c745a7e34d07f2390f4b6e7f9dca4626fb3, bde4ddd861dde6a4b24f4afd597a5f343c351366",14f3ff0b6325c22e73a4415f5b4042fd6171bf7e,Nikolaj Bjorner,nbjorner@microsoft.com,2019-01-07 09:00:21,1546822821,Merge branch 'master' of https://github.com/z3prover/z3,875,94,,0,0,0,0.0,6,0.0,0,0.0,18.0,0.0,0.0,0,False,0.0
cvc5,610952322417e3758f2b62300f618721c269b2b3,1f6fb54967659ff2ee3f8c29a8d306499fcf1299,Aina Niemetz,aina.niemetz@gmail.com,2019-01-07 09:02:02,1546822922,New C++ API: Add missing getType() calls to kick off type checking. (#2773),23,8,"src/api/cvc4cpp.cpp, test/unit/api/solver_black.h",2,2,2,0.4586858162005403,4,3512.0,2,127.0,11.0,0.0,9.0,0,False,0.0
z3,14f3ff0b6325c22e73a4415f5b4042fd6171bf7e,b63a0e31d3e2162049d9a424cc5be2bb10f20d26,Nikolaj Bjorner,nbjorner@microsoft.com,2019-01-07 16:30:04,1546849804,"fix regression from #2061 breaking #2074

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",19,7,"src/ast/rewriter/seq_rewriter.cpp, src/smt/theory_seq.cpp, src/smt/theory_seq.h",3,2,2,1.1687997226410385,6,7534.0,3,1126.6666666666667,18.0,0.0,9.0,0,True,0.0
z3,bde4ddd861dde6a4b24f4afd597a5f343c351366,d757c342d59edf29d0ba9af57adc4fa492f9e65e,Bruce Mitchener,bruce.mitchener@gmail.com,2019-01-07 23:13:09,1546873989,Define NO_Z3_DEBUGGER for emscripten builds.,4,0,src/util/debug.h,1,1,1,-0.0,6,15.0,1,2269.0,5.0,0.0,2.0,1,True,0.0
z3,58def55796aa53f8c000629024431cf4ff82bcf1,3620dfee5e513925a52245715c21db303bb188bc,nilsbecker,nbecker@student.ethz.ch,2019-01-08 22:09:32,1546956572,logging names of quantified variables and updating inst-possible line,6,1,"src/ast/ast.cpp, src/smt/smt_quantifier.cpp",2,2,2,0.863120568566631,6,3508.0,2,2269.5,2.0,0.0,11.0,0,False,0.0
cvc5,1f6fb54967659ff2ee3f8c29a8d306499fcf1299,4ec1c04f28293386518582b0257345f84461350d,Alex Ozdemir,aozdemir@hmc.edu,2019-01-09 08:29:12,1546993752,"LFSC drat output (#2776)

* LFSC drat output

* Addressed Mathias' review

Addressing Mathias' review with the following changes:
* Added a few blank lines
* Added a unit test for LRAT output as LFSC",105,13,"src/proof/drat/drat_proof.cpp, src/proof/drat/drat_proof.h, test/unit/proof/drat_proof_black.h",3,2,2,1.3391422862699356,4,383.0,3,2.0,16.0,0.0,9.0,0,False,0.0
cvc5,4ec1c04f28293386518582b0257345f84461350d,517b6ba3bb029470bdb3f230188af1f398b14a91,Alex Ozdemir,aozdemir@hmc.edu,2019-01-09 09:18:29,1546996709,"Clause proof printing (#2779)

* Print LFSC proofs of CNF formulas

* Unit Test for clause printing

* Added SAT input proof printing unit test

* Fixed cnf_holds reference. Proofs of CMap_holds

There were references to clauses_hold, which should have been references
to cnf_holds.

Also added a function for printing a value of type CMap_holds, and a
test for this function.",209,0,"src/proof/lfsc_proof_printer.cpp, src/proof/lfsc_proof_printer.h, test/unit/proof/CMakeLists.txt, test/unit/proof/lfsc_proof_printer_black.h",4,2,2,1.4540945656900508,4,309.0,4,67.25,19.0,0.0,11.0,0,True,0.0
cvc5,1df477011ed5d35f222340580cba916af3ba73b5,fb145effd5bfe67090736969478ff54cf7f62984,Andrew Reynolds,andrew.j.reynolds@gmail.com,2019-01-09 15:39:07,1547019547,Do not rewrite 1-constructor sygus testers to true (#2780),27,1,"src/theory/datatypes/datatypes_rewriter.cpp, test/regress/CMakeLists.txt, test/regress/regress2/sygus/min_IC_1.sy",3,2,3,0.5896261811873141,5,858.0,3,293.0,0.0,0.0,1.0,0,False,0.0
z3,b63a0e31d3e2162049d9a424cc5be2bb10f20d26,9c318ed304579b6101207cf52535fc2a1128a76c,Nikolaj Bjorner,nbjorner@microsoft.com,2019-01-09 15:43:45,1547019825,"fix #2076, add option to handle .cnf files into dimacs parser

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",6,3,"src/api/api_solver.cpp, src/smt/theory_pb.cpp",2,2,2,0.7642045065086203,6,2812.0,2,2075.0,21.0,0.0,10.0,0,True,0.0
cvc5,517b6ba3bb029470bdb3f230188af1f398b14a91,1df477011ed5d35f222340580cba916af3ba73b5,Alex Ozdemir,aozdemir@hmc.edu,2019-01-09 19:19:22,1547032762,"[BV Proofs] Option for proof format (#2777)

We're building out a system whereby (eager) BV proofs can be emitted in
one of three formats. Let's add an option for specifying which!

My testing mechanism was not very thorough: I verified that I could specify each of the following option values:
* `er`
* `lrat`
* `drat`
* `help`

and that I could not provide random other option values.",91,0,"src/options/bv_bitblast_mode.cpp, src/options/bv_bitblast_mode.h, src/options/bv_options.toml, src/options/options_handler.cpp, src/options/options_handler.h",5,1,1,1.9707016536502748,4,2159.0,5,937.4,23.0,0.0,0.0,0,False,0.0
cvc5,fb145effd5bfe67090736969478ff54cf7f62984,51cb061609e10ff68fb9db053d23ea9dd72ddea2,Aina Niemetz,aina.niemetz@gmail.com,2019-01-10 10:47:53,1547088473,New C++ API: Get rid of mkConst functions (simplify API). (#2783),155,535,"src/api/cvc4cpp.cpp, src/api/cvc4cpp.h, src/api/cvc4cppkind.h, src/parser/smt2/Smt2.g, test/unit/api/solver_black.h",5,3,3,1.9466192215812752,5,4157.0,5,765.8,13.0,0.0,14.0,0,False,0.0
z3,9c318ed304579b6101207cf52535fc2a1128a76c,efaab6d8fd9e2166b3497233c1bad7637e253c7b,Nikolaj Bjorner,nbjorner@microsoft.com,2019-01-10 11:38:35,1547091515,"have sat cleaner use a fixed-point

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",94,80,"src/api/python/z3/z3.py, src/ast/datatype_decl_plugin.cpp, src/ast/datatype_decl_plugin.h, src/sat/sat_cleaner.cpp",4,3,3,1.7614842113971214,6,5551.0,4,1915.75,23.0,0.0,8.0,0,True,0.0
z3,"efaab6d8fd9e2166b3497233c1bad7637e253c7b, d757c342d59edf29d0ba9af57adc4fa492f9e65e",1e4662e0bc5cf324d46b7f6543d6969c56373fff,Nikolaj Bjorner,nbjorner@microsoft.com,2019-01-10 11:39:19,1547091559,"Merge pull request #2073 from waywardmonkeys/emscripten-no-debug

Define NO_Z3_DEBUGGER for emscripten builds.",4,0,,0,0,0,0.0,6,0.0,0,0.0,27.0,0.0,0.0,1,True,0.0
z3,efaab6d8fd9e2166b3497233c1bad7637e253c7b,59b0b56b421af33ba02e9662a19c3d69ef4bf371,Nikolaj Bjorner,nbjorner@microsoft.com,2019-01-10 12:08:38,1547093318,"add checkpoints to blocked clause elimination to handle timeouts, #2080

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",2,0,src/sat/sat_simplifier.cpp,1,1,1,-0.0,6,1801.0,1,2272.0,27.0,0.0,1.0,0,False,0.0
z3,"59b0b56b421af33ba02e9662a19c3d69ef4bf371, 1e4662e0bc5cf324d46b7f6543d6969c56373fff",7fc349b622c7011aa330018f2681af05ea20af6a,Nikolaj Bjorner,nbjorner@microsoft.com,2019-01-10 12:08:44,1547093324,Merge branch 'master' of https://github.com/z3prover/z3,4,0,,0,0,0,0.0,6,0.0,0,0.0,28.0,0.0,0.0,0,False,0.0
z3,7fc349b622c7011aa330018f2681af05ea20af6a,b12c1b1cbac974efb27298a7c9d0123ea2714082,Nikolaj Bjorner,nbjorner@microsoft.com,2019-01-10 13:38:45,1547098725,"set a throttle on ala

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",2,3,src/sat/sat_simplifier.cpp,1,1,1,-0.0,6,1802.0,1,2272.0,28.0,0.0,2.0,0,False,0.0
z3,b12c1b1cbac974efb27298a7c9d0123ea2714082,6e60926cc38361f411b6a709a1c36c902aeb7ded,Nikolaj Bjorner,nbjorner@microsoft.com,2019-01-10 15:25:10,1547105110,"fix drat output for elim_eqs

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",60,27,"src/sat/sat_elim_eqs.cpp, src/sat/sat_elim_eqs.h, src/sat/sat_solver.cpp, src/sat/sat_solver.h",4,1,1,0.6895806954635857,6,4436.0,4,2272.0,29.0,0.0,3.0,0,True,0.0
z3,6e60926cc38361f411b6a709a1c36c902aeb7ded,434eb25004fdd1cd24fb0c9319c897a8206cdf31,Nikolaj Bjorner,nbjorner@microsoft.com,2019-01-10 17:20:01,1547112001,"add useful div lemma for case #2079

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",14,2,"src/smt/theory_arith_core.h, src/smt/theory_seq.cpp",2,1,1,0.5435644431995964,6,7723.0,2,1700.0,33.0,0.0,9.0,0,False,0.0
z3,b63a0e31d3e2162049d9a424cc5be2bb10f20d26,f1c3e1aa7725ed12987ceeb7c0fdcb04a1f64a3e,Nikolaj Bjorner,nbjorner@microsoft.com,2019-01-11 04:58:40,1547153920,"fix #2077

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",5,4,src/ast/datatype_decl_plugin.cpp,1,1,1,-0.0,6,942.0,1,2272.0,35.0,0.0,6.0,0,True,0.0
z3,"f1c3e1aa7725ed12987ceeb7c0fdcb04a1f64a3e, 6e60926cc38361f411b6a709a1c36c902aeb7ded",1a4636518c3d3f8007d01f22f5a7e578854051c1,Nikolaj Bjorner,nbjorner@microsoft.com,2019-01-11 04:58:47,1547153927,Merge branch 'master' of https://github.com/z3prover/z3,168,113,,0,0,0,0.0,6,0.0,0,0.0,36.0,0.0,0.0,0,False,0.0
z3,"434eb25004fdd1cd24fb0c9319c897a8206cdf31, 1a4636518c3d3f8007d01f22f5a7e578854051c1",f8f3549c1c2e02dd3b874532a3bc0e01ff662256,Nikolaj Bjorner,nbjorner@microsoft.com,2019-01-11 10:13:14,1547172794,Merge branch 'master' of https://github.com/z3prover/z3,5,4,,0,0,0,0.0,6,0.0,0,0.0,36.0,0.0,0.0,0,False,0.0
cvc5,51cb061609e10ff68fb9db053d23ea9dd72ddea2,87f38648fe82b69b527a387bec9836455290cdba,Aina Niemetz,aina.niemetz@gmail.com,2019-01-11 12:06:03,1547179563,"New C++ API: Add unit tests for setInfo, setLogic, setOption. (#2782)",490,360,"src/api/cvc4cpp.cpp, src/api/cvc4cpp.h, src/smt/smt_engine.h, test/unit/api/solver_black.h",4,3,3,0.6647851118979415,5,4231.0,4,950.0,18.0,0.0,15.0,0,False,0.0
cvc5,87f38648fe82b69b527a387bec9836455290cdba,7635ca090c5866b0cc4eeb5beb279032f93bd654,Alex Ozdemir,aozdemir@hmc.edu,2019-01-11 12:48:13,1547182093,"Fixed linking against drat2er, and use drat2er (#2785)

* Fixed linking against drat2er/drat-trim

We have machinery for linking against drat2er. However, this machinery
didn't quite work because libdrat2er.a contains an (undefined) reference
to `run_drat_trim` from libdrat-trim.a.

Thus, when linking against libdrat2er.a, we also need to link against
libdrat-trim.a.

I made this change, and then tested it by actually calling a function
from the drat2er library (CheckAndConvertToLRAT) which relies on
`run_drat_trim`. Since this invocation compiles, we know that the
linking is working properly now.

* Combined the two libs, per Mathias

* drat2er configured gaurds",22,5,"cmake/FindDrat2Er.cmake, src/proof/lrat/lrat_proof.cpp",2,2,2,0.9910760598382222,5,282.0,2,15.0,28.0,0.0,5.0,0,True,0.0
z3,f8f3549c1c2e02dd3b874532a3bc0e01ff662256,9bd4050e0c221f7f9bb1409401f321c394cf70f4,Nikolaj Bjorner,nbjorner@microsoft.com,2019-01-11 13:43:39,1547185419,"use ref-vector for shared occurrences to avoid hash-table overhead

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",17,34,"src/ast/shared_occs.cpp, src/ast/shared_occs.h, src/cmd_context/extra_cmds/dbg_cmds.cpp",3,2,2,1.5365258988243435,6,657.0,3,2272.0,36.0,0.0,8.0,0,False,0.0
cvc5,7635ca090c5866b0cc4eeb5beb279032f93bd654,c652449ac9f4a54fc8f37796f0bff3960434cf40,Alex Ozdemir,aozdemir@hmc.edu,2019-01-11 16:04:56,1547193896,"LratInstruction inheritance (#2784)

While implementing and testing LRAT proof output as LFSC, I discovered
that my implementation of LratInstruction as a tagged union was subtly
broken for reasons related to move/copy assignment/constructors.

While I could have figured out how to fix it, I decided to stop fighting
the system and use inheritance.

This PR will be followed by one using the inheritance-based
LratInstruction to implement output to LFSC.",83,139,"src/proof/lrat/lrat_proof.cpp, src/proof/lrat/lrat_proof.h",2,1,1,0.9137253152370278,5,300.0,2,6.0,30.0,0.0,6.0,0,True,0.0
z3,9bd4050e0c221f7f9bb1409401f321c394cf70f4,b8d18c6c6d150ad73747e90ccaa272b66a1f7b89,Nikolaj Bjorner,nbjorner@microsoft.com,2019-01-11 20:52:19,1547211139,"speed-up handling of cnf input to inc_sat_solver

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",133,57,"src/ast/expr2var.cpp, src/ast/expr2var.h, src/sat/sat_cleaner.cpp, src/sat/sat_simplifier.cpp, src/sat/sat_solver/inc_sat_solver.cpp, src/sat/tactic/atom2bool_var.cpp, src/smt/theory_pb.cpp",7,3,5,2.447919439925325,6,5267.0,7,2076.285714285714,39.0,0.0,22.0,0,False,0.0
z3,b8d18c6c6d150ad73747e90ccaa272b66a1f7b89,63d480fd92989381db5e6e3c827de19d6a630d1c,Nikolaj Bjorner,nbjorner@microsoft.com,2019-01-11 21:17:39,1547212659,"fix cnf check

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",96,5,"src/opt/opt_context.cpp, src/sat/sat_drat.cpp, src/sat/sat_drat.h, src/sat/sat_solver/inc_sat_solver.cpp",4,2,3,0.7986295067086411,6,2944.0,4,1156.0,46.0,0.0,5.0,0,True,0.0
z3,63d480fd92989381db5e6e3c827de19d6a630d1c,836f156d545d7418da71fb7b70da879507431e8f,Nikolaj Bjorner,nbjorner@microsoft.com,2019-01-12 00:12:20,1547223140,"fix drat for units learned from binary clause resolution

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",76,59,"src/sat/sat_clause.cpp, src/sat/sat_clause.h, src/sat/sat_cleaner.cpp, src/sat/sat_drat.cpp, src/sat/sat_simplifier.cpp, src/sat/sat_solver.cpp",6,1,1,1.7739289406359062,7,6525.0,6,2011.8333333333333,50.0,0.0,6.0,0,True,0.0
z3,836f156d545d7418da71fb7b70da879507431e8f,0b8dbf28545eaea8820715224b65ea371e892dad,Nikolaj Bjorner,nbjorner@microsoft.com,2019-01-12 00:30:21,1547224221,"fixing drat proofs

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",8,9,"src/sat/sat_drat.cpp, src/sat/sat_simplifier.cpp, src/sat/sat_solver.cpp",3,1,1,1.2532975784630431,7,5988.0,3,1750.6666666666667,56.0,0.0,7.0,0,True,0.0
z3,0b8dbf28545eaea8820715224b65ea371e892dad,3c96b51e979143733fc082949543324eb0a2cfb9,Nikolaj Bjorner,nbjorner@microsoft.com,2019-01-12 00:40:36,1547224836,"lvl -> _lvl

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",1,1,src/sat/sat_solver.cpp,1,1,1,-0.0,7,3651.0,1,2273.0,59.0,0.0,8.0,0,False,0.0
z3,3c96b51e979143733fc082949543324eb0a2cfb9,e623f1e9c950c79fd85d783c8a16a0660ea56ccd,Nikolaj Bjorner,nbjorner@microsoft.com,2019-01-12 01:01:49,1547226109,"restoring clause sizes after deletion

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",6,8,"src/sat/ba_solver.cpp, src/sat/sat_simplifier.cpp",2,1,1,0.5916727785823275,7,5816.0,2,1417.0,60.0,0.0,9.0,0,False,0.0
z3,e623f1e9c950c79fd85d783c8a16a0660ea56ccd,e4d6aa07dcf1e67a77b60a3152f46641428229f3,Nikolaj Bjorner,nbjorner@microsoft.com,2019-01-12 11:05:00,1547262300,"use vectors instead of hash-tables in dimacs serialization to avoid hash-table contention

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",26,14,"src/sat/sat_drat.cpp, src/sat/sat_solver.cpp, src/tactic/goal.cpp",3,2,2,1.3182370617587251,7,4837.0,3,1751.6666666666667,62.0,0.0,10.0,0,False,0.0
z3,e4d6aa07dcf1e67a77b60a3152f46641428229f3,f835a3c2b2a959abeca4d4e1b9e19e6d8e31405b,Nikolaj Bjorner,nbjorner@microsoft.com,2019-01-12 11:08:35,1547262515,"revert assumption tracking choice in unit literals inferred from binary clauses

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",2,2,src/sat/sat_solver.cpp,1,1,1,-0.0,7,3651.0,1,2274.0,65.0,0.0,11.0,0,False,0.0
z3,f835a3c2b2a959abeca4d4e1b9e19e6d8e31405b,dc5e4ca1c5267e78b74951092b7e1de14333eff1,Nikolaj Bjorner,nbjorner@microsoft.com,2019-01-12 13:19:09,1547270349,"fix drat generation in asymmetric branch simplification

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",32,11,"src/sat/sat_asymm_branch.cpp, src/sat/sat_drat.cpp, src/tactic/goal.cpp",3,2,2,1.495057293495702,7,1641.0,3,1751.6666666666667,66.0,0.0,13.0,0,True,0.0
z3,b72cb96ee3a94d8a9402b2f87a499c975ce828f0,ffd26e5a563aa2c464014261c5774435a3e9bcc6,Yatao Li,yatli@microsoft.com,2019-01-12 15:01:05,1547276465,.net: remove net35 related build props; drop src/api/dotnet/core,86,241,".gitignore, CMakeSettings.json, cmake/modules/DotnetImports.props.in, cmake/modules/FindDotnet.cmake, src/api/dotnet/Microsoft.Z3.csproj.in",8,2,3,1.927079790029323,7,0.0,6,653.75,0.0,0.0,4.0,0,False,0.0
z3,"ffd26e5a563aa2c464014261c5774435a3e9bcc6, 63d480fd92989381db5e6e3c827de19d6a630d1c",17596fcc17b44ccf8d48dce128af192b00e55fc4,Yatao Li,yatli@microsoft.com,2019-01-12 15:01:28,1547276488,Merge remote-tracking branch 'upstream/master',1440,375,,0,0,0,0.0,7,0.0,0,0.0,8.0,0.0,0.0,0,False,0.0
z3,17596fcc17b44ccf8d48dce128af192b00e55fc4,53eaab4709b4402951030bbcde9a5b49d35aa3d1,Yatao Li,yatli@microsoft.com,2019-01-12 17:38:24,1547285904,dotnet: update build scripts,20,35,".gitignore, cmake/modules/FindDotnet.cmake, src/api/dotnet/CMakeLists.txt, src/api/dotnet/Microsoft.Z3.csproj.in",5,2,3,2.04396317860643,7,0.0,5,767.5,8.0,0.0,6.0,0,False,0.0
z3,53eaab4709b4402951030bbcde9a5b49d35aa3d1,e5f65263bb4989773f9b5b3d370cce1d557aaba1,Yatao Li,yatli@microsoft.com,2019-01-12 19:22:38,1547292158,dotnet: reigster local repo for nupkg,6,1,src/api/dotnet/CMakeLists.txt,1,1,1,-0.0,7,0.0,1,579.0,13.0,0.0,6.0,0,False,0.0
z3,e5f65263bb4989773f9b5b3d370cce1d557aaba1,3767c311aa58c0d6c17d75f823abff93544ebd90,Yatao Li,yatli@microsoft.com,2019-01-12 19:35:08,1547292908,FindDotnet: generator expression IF is not available for older cmake versions,1,1,cmake/modules/FindDotnet.cmake,1,1,1,-0.0,7,0.0,1,124.0,14.0,0.0,2.0,0,False,0.0
z3,3767c311aa58c0d6c17d75f823abff93544ebd90,4b3189f3e2094a71c63e4204083c5e9258088e19,Yatao Li,yatli@microsoft.com,2019-01-12 20:04:44,1547294684,dotnet: identifies arch-specific native libraries,8,2,"src/api/dotnet/CMakeLists.txt, src/api/dotnet/Microsoft.Z3.csproj.in, src/api/dotnet/Microsoft.Z3.props",3,1,1,1.4854752972273344,7,0.0,3,275.6666666666667,15.0,0.0,7.0,0,False,0.0
z3,4b3189f3e2094a71c63e4204083c5e9258088e19,55f92f3658ce01be3f6b21a2297dd85dcf4b3112,Yatao Li,yatli@microsoft.com,2019-01-12 21:33:09,1547299989,dotnet: remove stale packages before pack; relay cmake config generator expression into msbuild property..,22,13,"cmake/modules/FindDotnet.cmake, src/api/dotnet/CMakeLists.txt, src/api/dotnet/Microsoft.Z3.csproj.in",3,2,2,1.2104682884857807,7,0.0,3,275.6666666666667,18.0,0.0,11.0,0,False,0.0
z3,55f92f3658ce01be3f6b21a2297dd85dcf4b3112,5e79dba3d6d1fe1bdc7486f9e9d2c4dd9f485675,Yatao Li,yatli@microsoft.com,2019-01-13 00:03:37,1547309017,dotnet: move example project build to cmake,7,3,"contrib/ci/scripts/test_z3_examples_cmake.sh, examples/dotnet/dotnet.csproj, src/api/dotnet/CMakeLists.txt",3,3,3,1.521928094887362,7,0.0,3,422.0,21.0,0.0,9.0,0,False,0.0
z3,5e79dba3d6d1fe1bdc7486f9e9d2c4dd9f485675,0a6a76734a8321a73e00d1ee0c8078da2c8138c6,Yatao Li,yatli@microsoft.com,2019-01-13 00:08:32,1547309312,docker: ubuntu 14.04 dotnet source fix,1,1,contrib/ci/Dockerfiles/z3_base_ubuntu_14.04.Dockerfile,1,1,1,-0.0,7,0.0,1,565.0,24.0,0.0,1.0,0,True,0.0
z3,dc5e4ca1c5267e78b74951092b7e1de14333eff1,4b35ef29c9b96a150a9edf6dc899c62fb04b7bdf,Nikolaj Bjorner,nbjorner@microsoft.com,2019-01-13 01:18:03,1547313483,"fix #2081

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",79,37,"src/ast/rewriter/pb_rewriter.cpp, src/opt/opt_context.cpp, src/opt/wmax.cpp, src/smt/theory_pb.cpp, src/smt/theory_pb.h, src/smt/theory_wmaxsat.cpp",6,3,3,0.9492669723601151,7,4937.0,6,1818.5,69.0,0.0,21.0,0,True,0.0
z3,4b35ef29c9b96a150a9edf6dc899c62fb04b7bdf,4159b987cea41450027e1590f339729f42005d49,Nikolaj Bjorner,nbjorner@microsoft.com,2019-01-13 03:23:57,1547321037,"purge unused code from theory_pb, fix bug reported by Mark Dunlop

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",18,319,"src/opt/maxres.cpp, src/smt/params/smt_params_helper.pyg, src/smt/params/theory_pb_params.cpp, src/smt/params/theory_pb_params.h, src/smt/theory_pb.cpp, src/smt/theory_pb.h",6,2,3,0.7451146717868049,7,3072.0,6,1884.0,75.0,0.0,14.0,1,True,0.0
z3,4159b987cea41450027e1590f339729f42005d49,46bfcbd4f8231db4b340fb96cda7e50efaea7675,Nikolaj Bjorner,nbjorner@microsoft.com,2019-01-13 03:46:11,1547322371,"fix #2082

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",10,2,src/ast/rewriter/arith_rewriter.cpp,1,1,1,-0.0,7,1532.0,1,2271.0,81.0,0.0,10.0,0,True,0.0
z3,46bfcbd4f8231db4b340fb96cda7e50efaea7675,eaa80d5b0211e21bfdd5e36b01ce66b49d5dc54b,Nikolaj Bjorner,nbjorner@microsoft.com,2019-01-13 11:33:23,1547350403,"fix test build

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",0,2,src/test/theory_pb.cpp,1,1,1,-0.0,7,142.0,1,1839.0,82.0,0.0,0.0,0,True,0.0
cvc5,c652449ac9f4a54fc8f37796f0bff3960434cf40,300560dda47178cae18f5f4ad2edb381eabddb30,Alex Ozdemir,aozdemir@hmc.edu,2019-01-13 13:21:24,1547356884,"LFSC LRAT Output (#2787)

* LFSC ouput & unit test

* Renamed lrat unit test file

* s/DRAT/LRAT/

Thanks Andres!

Co-Authored-By: alex-ozdemir <aozdemir@hmc.edu>

* Addressed Andres' comments

1. Extracted a filter whitespace function.
2. Added @param annotations.

* Addressing Yoni's comments

Tweaked the test method name for LRAT output as LFSC
Added assertions for verifying that clause index lists are sorted during
LFSC LRAT output.",221,0,"src/proof/lrat/lrat_proof.cpp, src/proof/lrat/lrat_proof.h, test/unit/proof/CMakeLists.txt, test/unit/proof/lrat_proof_black.h",4,2,2,1.2950641379142898,5,437.0,4,5.25,32.0,0.0,17.0,0,False,0.0
z3,0a6a76734a8321a73e00d1ee0c8078da2c8138c6,8ebde41f3581287c8ea556bf3cccca1c7f505b1b,Yatao Li,yatli@microsoft.com,2019-01-13 22:45:05,1547390705,dotnet: example: copy to binary dir before build,23,7,"examples/CMakeLists.txt, examples/dotnet/CMakeLists.txt, examples/dotnet/README, src/api/dotnet/CMakeLists.txt",4,3,3,1.7529115501041423,7,0.0,4,856.75,25.0,0.0,11.0,0,False,0.0
z3,8ebde41f3581287c8ea556bf3cccca1c7f505b1b,08adc1bf97bc825452c9311f9bdcf0c29453c79e,Yatao Li,yatli@microsoft.com,2019-01-13 23:15:40,1547392540,...,2,2,examples/dotnet/CMakeLists.txt,1,1,1,-0.0,7,0.0,1,0.0,29.0,0.0,2.0,0,False,0.0
z3,08adc1bf97bc825452c9311f9bdcf0c29453c79e,f0f9a16f85ecddc13f16d48247c3f2adf57a97f1,Yatao Li,yatli@microsoft.com,2019-01-14 00:22:51,1547396571,cmake: dotnet: example: program -> Program,1,1,examples/dotnet/CMakeLists.txt,1,1,1,-0.0,7,0.0,1,0.0,30.0,0.0,3.0,0,False,0.0
z3,f0f9a16f85ecddc13f16d48247c3f2adf57a97f1,209ebecb867013519ade81445146438fe710ccb4,Yatao Li,yatli@microsoft.com,2019-01-14 00:51:44,1547398304,cmake: dotnet: example: dotnet.csproj is NETCOREAPP,1,0,examples/dotnet/CMakeLists.txt,1,1,1,-0.0,7,0.0,1,0.0,31.0,0.0,4.0,0,False,0.0
z3,eaa80d5b0211e21bfdd5e36b01ce66b49d5dc54b,0b84c6088604da58885a4cda2ad9faf94fc157bd,Nikolaj Bjorner,nbjorner@microsoft.com,2019-01-14 01:25:25,1547400325,"fix another bug uncovered by Dunlop, prepare grounds for equality solving within NNFs

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",283,122,"src/ackermannization/ackr_bound_probe.cpp, src/ackermannization/ackr_model_converter.cpp, src/ackermannization/lackr.cpp, src/cmd_context/check_logic.cpp, src/opt/maxres.cpp, src/opt/opt_context.cpp, src/opt/optsmt.cpp, src/smt/smt_context_pp.cpp, src/smt/theory_pb.cpp, src/tactic/core/propagate_values_tactic.cpp, src/tactic/core/solve_eqs_tactic.cpp, src/tactic/smtlogics/qfaufbv_tactic.cpp, src/tactic/tactic.cpp",13,5,7,2.555134791953498,7,7437.0,13,1860.1538461538464,83.0,0.0,20.0,1,True,0.0
cvc5,300560dda47178cae18f5f4ad2edb381eabddb30,23374b9d7fe9363165c99fbbddfd7591302a3431,Alex Ozdemir,aozdemir@hmc.edu,2019-01-14 10:53:31,1547434411,"ClausalBitvectorProof (#2786)

* [DRAT] ClausalBitvectorProof

Created a class, `ClausalBitvectorProof`, which represents a bitvector
proof of UNSAT using an underlying clausal technique (DRAT, LRAT, etc)

It fits into the `BitvectorProof` class hierarchy like this:

```
              BitvectorProof
              /            \
             /              \
ClausalBitvectorProof  ResolutionBitvectorProof
```

This change is a painful one because all of the following BV subsystems
referenced ResolutionBitvectorProof (subsequently RBVP) or
BitvectorProof (subsequently BVP):
   * CnfStream
   * SatSolver (specifically the BvSatSolver)
   * CnfProof
   * TheoryProof
   * TheoryBV
   * Both bitblasters

And in particular, ResolutionBitvectorProof, the CnfStream, and the
SatSolvers were tightly coupled.

This means that references to and interactions with (R)BVP were
pervasive.

Nevertheless, an SMT developer must persist.

The change summary:
  * Create a subclass of BVP, called ClausalBitvectorProof, which has
    most methods stubbed out.
  * Make a some modifications to BVP and ResolutionBitvectorProof as the
    natural division of labor between the different classes becomes
    clear.
  * Go through all the components in the first list and try to figure
    out which kind of BVP they should **actually** be interacting with,
    and how. Make tweaks accordingly.
  * Add a hook from CryptoMinisat which pipes the produced DRAT proof
    into the new ClausalBitvectorProof.
  * Add a debug statement to ClausalBitvectorProof which parses and
    prints that DRAT proof, for testing purposes.

Test:
  * `make check` to verify that we didn't break any old stuff, including
    lazy BB, and eager BB when using bvminisat.
  * `cvc4 --dump-proofs --bv-sat-solver=cryptominisat --bitblast=eager
  -d bv::clausal test/regress/regress0/bv/ackermann2.smt2`, and see that
     1. It crashed with ""Unimplemented""
     2. Right before that it prints out the (textual) DRAT proof.

* Remove 2 unneeded methods

* Missed a rename

* Typos

Thanks Andres!

Co-Authored-By: alex-ozdemir <aozdemir@hmc.edu>

* Address Andres comments

* Reorder members of TBitblaster",510,151,"src/CMakeLists.txt, src/proof/bitvector_proof.cpp, src/proof/bitvector_proof.h, src/proof/clausal_bitvector_proof.cpp, src/proof/clausal_bitvector_proof.h, src/proof/cnf_proof.cpp, src/proof/cnf_proof.h, src/proof/resolution_bitvector_proof.cpp, src/proof/resolution_bitvector_proof.h, src/proof/theory_proof.cpp, src/prop/bvminisat/bvminisat.cpp, src/prop/bvminisat/bvminisat.h, src/prop/cnf_stream.cpp, src/prop/cryptominisat.cpp, src/prop/cryptominisat.h, src/prop/sat_solver.h, src/theory/bv/bitblast/bitblaster.h, src/theory/bv/bitblast/eager_bitblaster.cpp, src/theory/bv/bitblast/eager_bitblaster.h, src/theory/bv/bitblast/lazy_bitblaster.cpp, src/theory/bv/bitblast/lazy_bitblaster.h, src/theory/bv/bv_eager_solver.cpp, src/theory/bv/bv_eager_solver.h, src/theory/bv/bv_subtheory.h, src/theory/bv/bv_subtheory_bitblast.cpp, src/theory/bv/bv_subtheory_bitblast.h, src/theory/bv/theory_bv.cpp, src/theory/bv/theory_bv.h",28,4,6,3.8901546497831982,5,7161.0,28,1461.607142857143,36.0,0.0,12.0,1,True,0.0
z3,0b84c6088604da58885a4cda2ad9faf94fc157bd,a686aa7f5628248eb8819dfc96845c25b73c5e19,Nikolaj Bjorner,nbjorner@microsoft.com,2019-01-14 10:56:10,1547434570,"produce binary clauses for DRAT for units produced by probing

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",10,6,"src/sat/sat_drat.cpp, src/sat/sat_probing.cpp",2,1,1,0.8112781244591328,7,757.0,2,1492.5,96.0,0.0,13.0,0,False,0.0
z3,a686aa7f5628248eb8819dfc96845c25b73c5e19,e954f59052fd2aee193527a0503a8b5a8575343b,Nikolaj Bjorner,nbjorner@microsoft.com,2019-01-14 13:50:17,1547445017,"ensure that solver objects have timeout/rlimit/ctrl-c exposed as possible parameters

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",18,3,"src/cmd_context/context_params.cpp, src/solver/solver.cpp, src/util/params.cpp, src/util/params.h",4,3,3,1.7170407814747584,7,1301.0,4,2262.25,98.0,0.0,6.0,0,False,0.0
z3,209ebecb867013519ade81445146438fe710ccb4,58e8b2b8d57c217b02f1a9e9da000902b4c7f9c2,Yatao Li,yatli@microsoft.com,2019-01-14 14:02:58,1547445778,Dockerfile: update ubuntu 14.04 image with cmake 3.12,4,2,".travis.yml, contrib/ci/Dockerfiles/z3_base_ubuntu_14.04.Dockerfile",2,1,2,0.9182958340544896,7,0.0,2,567.0,32.0,0.0,2.0,0,False,0.0
z3,e954f59052fd2aee193527a0503a8b5a8575343b,54a125063b285deafeabd100225894830811a94f,Nikolaj Bjorner,nbjorner@microsoft.com,2019-01-14 15:00:25,1547449225,"remove produce interpolants

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",71,17,"src/cmd_context/basic_cmds.cpp, src/shell/dimacs_frontend.cpp",2,2,2,0.5435644431995964,7,1034.0,2,2275.0,102.0,0.0,4.0,0,False,0.0
z3,54a125063b285deafeabd100225894830811a94f,ee07008fb9ffe16726d1721dc16382de8a442c12,Nikolaj Bjorner,nbjorner@microsoft.com,2019-01-14 15:04:46,1547449486,"import files from csp

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",4,1,"src/shell/smtlib_frontend.cpp, src/util/ema.h",2,2,2,0.7219280948873623,7,102.0,2,1265.0,104.0,0.0,5.0,0,False,0.0
z3,ee07008fb9ffe16726d1721dc16382de8a442c12,b11ec3bfbf2378a8f29f8ae3097e154cfbd4011c,Nikolaj Bjorner,nbjorner@microsoft.com,2019-01-14 15:17:42,1547450262,"merge sat_tactic from csp

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",15,1,src/sat/tactic/sat_tactic.cpp,1,1,1,-0.0,7,179.0,1,2265.0,106.0,0.0,14.0,0,False,0.0
z3,b11ec3bfbf2378a8f29f8ae3097e154cfbd4011c,ed7cac8cc0c90218fddff50bb0972a7bf33436f8,Nikolaj Bjorner,nbjorner@microsoft.com,2019-01-14 16:42:13,1547455333,"neatify logging

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",109,27,"src/sat/sat_asymm_branch.cpp, src/sat/sat_solver.cpp, src/sat/sat_solver.h, src/sat/sat_types.h",4,1,1,0.56290480818691,7,4880.0,4,2276.0,107.0,0.0,15.0,0,False,0.0
z3,ed7cac8cc0c90218fddff50bb0972a7bf33436f8,f23846059785e9bf4233bb98a5503384f508a2a9,Nikolaj Bjorner,nbjorner@microsoft.com,2019-01-14 16:45:04,1547455504,"neatify statistics

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",18,18,src/sat/sat_solver.cpp,1,1,1,-0.0,7,3724.0,1,2276.0,111.0,0.0,16.0,0,False,0.0
z3,f23846059785e9bf4233bb98a5503384f508a2a9,65bd427e469e6238cd378eed14f9e26a1978ca64,Nikolaj Bjorner,nbjorner@microsoft.com,2019-01-14 16:48:48,1547455728,"neatify statistics

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",16,16,"src/sat/sat_asymm_branch.cpp, src/sat/sat_cleaner.cpp, src/sat/sat_probing.cpp, src/sat/sat_scc.cpp, src/sat/sat_simplifier.cpp",5,1,1,1.8419171866886992,7,2883.0,5,2276.0,112.0,0.0,17.0,0,False,0.0
cvc5,23374b9d7fe9363165c99fbbddfd7591302a3431,448ee080458373fbd3aabe97396101d98d68f0c0,Andrew Reynolds,andrew.j.reynolds@gmail.com,2019-01-14 19:12:59,1547464379,Only check disequal terms with sygus-rr-verify (#2793),55,48,src/theory/datatypes/datatypes_sygus.cpp,1,1,1,-0.0,5,1571.0,1,1454.0,3.0,0.0,3.0,0,False,0.0
z3,3620dfee5e513925a52245715c21db303bb188bc,bfb554c0b8e87b094ecde74196061ef1744dc150,nilsbecker,nbecker@student.ethz.ch,2019-01-14 21:28:06,1547472486,"logging sorts of quantified variables
logging proof objects seperately form regular terms
renaming inst-possible -> inst-discovered",10,3,"src/ast/ast.cpp, src/smt/smt_quantifier.cpp",2,2,2,0.6193821946787638,7,3515.0,2,2275.5,4.0,0.0,25.0,0,False,0.0
z3,bfb554c0b8e87b094ecde74196061ef1744dc150,279413412d9c4fca03569d0ebb37f44457f9d479,nilsbecker,nbecker@student.ethz.ch,2019-01-15 01:09:44,1547485784,preventing operations during MBQI search from being logged,8,4,"src/smt/smt_context.cpp, src/smt/smt_context.h",2,1,1,0.6500224216483541,7,4517.0,2,2275.0,6.0,0.0,15.0,0,False,0.0
z3,58e8b2b8d57c217b02f1a9e9da000902b4c7f9c2,43ee345f01e2ecb7b3d93fa90c0a8cc639afde97,Yatao Li,yatli@microsoft.com,2019-01-15 03:06:36,1547492796,dotnet deps hack for test,29,5,".travis.yml, cmake/modules/FindDotnet.cmake, contrib/ci/scripts/test_z3_examples_cmake.sh, examples/dotnet/CMakeLists.txt, src/api/dotnet/CMakeLists.txt",5,4,5,1.6627992560224794,7,0.0,5,368.6,34.0,0.0,23.0,0,False,0.0
z3,65bd427e469e6238cd378eed14f9e26a1978ca64,161c83795fe697ecbb47c6849e478cc6dc169472,Nikolaj Bjorner,nbjorner@microsoft.com,2019-01-15 08:34:55,1547512495,"remember inconsistent states when cloning

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",5,0,src/sat/sat_solver.cpp,1,1,1,-0.0,7,3728.0,1,2277.0,117.0,0.0,18.0,0,False,0.0
z3,161c83795fe697ecbb47c6849e478cc6dc169472,5328454c7783bc3d8fed6729917b84842fb4d1e6,Nikolaj Bjorner,nbjorner@microsoft.com,2019-01-15 08:37:23,1547512643,"const

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",1,1,src/sat/sat_solver.cpp,1,1,1,-0.0,7,3728.0,1,2277.0,118.0,0.0,19.0,0,False,0.0
z3,5328454c7783bc3d8fed6729917b84842fb4d1e6,3298486136da1ae966998258e6f4db33b3efb45c,Nikolaj Bjorner,nbjorner@microsoft.com,2019-01-15 08:40:38,1547512838,"don't reach max conflicts if state is inconsistent

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",1,1,src/sat/sat_solver.cpp,1,1,1,-0.0,7,3728.0,1,2277.0,119.0,0.0,20.0,0,False,0.0
cvc5,da504025a3a77e9a3201af33ee6f96f937802807,4a38be3b9ac133655602a989f1136cd24ed89bc6,Andres Noetzli,andres.noetzli@gmail.com,2019-01-15 10:28:47,1547519327,"Strings: Add option to change loop process mode (#2794)

This commit adds an option `--strings-process-loop-mode` that allows
finer-grained control over CVC4 processes looping word equation. In
particular, performing normal loop breaking sometimes leads to worse
performance. The ""simple"" mode disables that inference.",260,34,"src/options/CMakeLists.txt, src/options/options_handler.cpp, src/options/options_handler.h, src/options/strings_options.toml, src/options/strings_process_loop_mode.cpp, src/options/strings_process_loop_mode.h, src/smt/smt_engine.cpp, src/theory/strings/theory_strings.cpp, src/theory/strings/theory_strings.h",9,3,3,2.753855184695108,5,11316.0,9,1132.3333333333333,12.0,0.0,7.0,0,False,0.0
cvc5,448ee080458373fbd3aabe97396101d98d68f0c0,da504025a3a77e9a3201af33ee6f96f937802807,Andrew Reynolds,andrew.j.reynolds@gmail.com,2019-01-15 10:54:02,1547520842,Fix unsound double abs rewrite rule for FP (#2792),28,3,"src/theory/fp/theory_fp_rewriter.cpp, test/regress/CMakeLists.txt, test/regress/regress0/fp/abs-unsound.smt2, test/regress/regress0/fp/abs-unsound2.smt2",4,2,3,1.8215383158393943,5,934.0,4,497.75,4.0,0.0,5.0,0,True,0.0
z3,3298486136da1ae966998258e6f4db33b3efb45c,b33f5f879e5cf662b854d9c9e3ff968abdb50f1a,Nikolaj Bjorner,nbjorner@microsoft.com,2019-01-15 17:57:11,1547546231,"fix another bug reported by Mark Dunlop

Signed-off-by: Nikolaj Bjorner <nbjorner@microsoft.com>",5,2,src/opt/opt_context.cpp,1,1,1,-0.0,7,1517.0,1,1916.0,120.0,0.0,4.0,1,True,0.0
cvc5,4a38be3b9ac133655602a989f1136cd24ed89bc6,3018455b424fc61e140be665a813cb6a8fac6320,Andres Noetzli,andres.noetzli@gmail.com,2019-01-15 19:14:06,1547550846,"CMake: Fix search for static libraries (#2798)

When configuring CVC4 with `--static`, we change
`CMAKE_FIND_LIBRARY_SUFFIXES` to prefer static libraries (`*.a`) over
shared ones. However, instead of prepending `.a` to the list of
`CMAKE_FIND_LIBRARY_SUFFIXES`, we created a single element with `.a` and
the previous list.

Output of `message(""${CMAKE_FIND_LIBRARY_SUFFIXES}"")` before the change:

```
.a .tbd;.dylib;.so;.a
```

After the change:

```
.a;.tbd;.dylib;.so;.a
```

On macOS, both the static and the shared library of GMP are available
(when installed via homebrew) and before the change, CMake would pick the
shared library when compiling with `--static --no-static-binary`. This
commit fixes that issue.",1,1,CMakeLists.txt,1,0,1,-0.0,5,0.0,1,490.0,21.0,0.0,0.0,0,True,0.0
