{"40aa2f7cb294d6ab8afb8aede0e28d06962df190":{"changes":{"src\/ast\/ast.cpp":"MODIFY","src\/muz\/base\/hnf.cpp":"MODIFY","src\/muz\/fp\/horn_tactic.cpp":"MODIFY","src\/ast\/rewriter\/rewriter_def.h":"MODIFY"},"diff":{"src\/ast\/ast.cpp":[{"add":["1802","    SASSERT(s_count != 1);","1836","    \/\/    track_id(n, 323);","2904","           tout << p1->get_id() << \": \" << mk_bounded_pp(p1, *this, 5) << \"\\n\\n\";","2905","           tout << p2->get_id() << \": \" << mk_bounded_pp(p2, *this, 5) << \"\\n\\n\";","2915","    proof* p = mk_app(m_basic_family_id, PR_TRANSITIVITY, p1, p2, mk_app(f, to_app(get_fact(p1))->get_arg(0), to_app(get_fact(p2))->get_arg(1)));","2916","","2917","\/\/    SASSERT(p->get_id() != 202);","2918","    return p;","2960","    proof* p = mk_app(m_basic_family_id, PR_MONOTONICITY, args.size(), args.c_ptr());","2961","    SASSERT(p->get_id() != 202);","2962","    return p;"],"delete":["1802","    \/\/SASSERT(s_count != 2);","1836","    \/\/ track_id(n, 48);","2904","           tout << mk_bounded_pp(p1, *this, 5) << \"\\n\\n\";","2905","           tout << mk_bounded_pp(p2, *this, 5) << \"\\n\\n\";","2915","    return mk_app(m_basic_family_id, PR_TRANSITIVITY, p1, p2, mk_app(f, to_app(get_fact(p1))->get_arg(0), to_app(get_fact(p2))->get_arg(1)));","2957","    return mk_app(m_basic_family_id, PR_MONOTONICITY, args.size(), args.c_ptr());"]}],"src\/muz\/base\/hnf.cpp":[{"add":["167","            tout << mk_pp(n, m) << \"\\n==>\\n\" << result << \"\\n\";);","457","    proof_ref mk_congruence(proof* p, expr_ref_vector const& body, expr* head, proof_ref_vector& defs) {","459","            return proof_ref(p, m);","462","            SASSERT(p);","463","            proof_ref p1(p, m), p2(m), p3(m);"],"delete":["167","              tout << mk_pp(n, m) << \"\\n==>\\n\";","168","              for (unsigned i = 0; i < result.size(); ++i) {","169","                  tout << mk_pp(result[i].get(), m) << \"\\n\";","170","              });","460","    proof_ref mk_congruence(proof* p1, expr_ref_vector const& body, expr* head, proof_ref_vector& defs) {","462","            return proof_ref(p1, m);","465","            SASSERT(p1);","466","            proof_ref p2(m), p3(m);"]}],"src\/muz\/fp\/horn_tactic.cpp":[{"add":["351","                not_supported(\"engine=datalog\");","353","                not_supported(\"datalog.generate_explanations\"); ","355","                not_supported(\"datalog.magic_sets_for_queries\");","356","            if (p.xform_instantiate_arrays())","357","                not_supported(\"xform.instantiate_arrays\");","358","            if (p.xform_magic())","359","                not_supported(\"xform.magic\");","362","        void not_supported(char const* s) {","363","            throw default_exception(std::string(\"unsupported parameter \") + s);"],"delete":["351","                not_supported();","353","                not_supported(); ","355","                not_supported();","358","        void not_supported() {","359","            throw default_exception(\"unsupported parameter combination passed to HORN tactic\");"]}],"src\/ast\/rewriter\/rewriter_def.h":[{"add":["186","            TRACE(\"rewriter\", tout << \"process const: \" << mk_bounded_pp(t, m()) << \" -> \" << mk_bounded_pp(m_r,m()) << \"\\n\";);","305","        SASSERT(st == BR_FAILED || rewrites_from(new_t, m_pr2));","318","                SASSERT(rewrites_to(m_r, m_pr));","319","                SASSERT(rewrites_from(t, m_pr));","352","                    SASSERT(rewrites_to(m_r, m_pr));","353","                    SASSERT(rewrites_from(t, m_pr));"],"delete":[]}]}}}